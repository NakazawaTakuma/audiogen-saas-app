This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
backend/config/asgi.py
backend/config/settings.py
backend/config/urls.py
backend/config/wsgi.py
backend/manage.py
backend/marketplace/admin.py
backend/marketplace/apps.py
backend/marketplace/migrations/0001_initial.py
backend/marketplace/models.py
backend/marketplace/models/license.py
backend/marketplace/models/product.py
backend/marketplace/models/tag.py
backend/marketplace/serializers/license_serializer.py
backend/marketplace/serializers/product_serializer.py
backend/marketplace/serializers/tag_serializer.py
backend/marketplace/tests.py
backend/marketplace/urls/product_urls.py
backend/marketplace/views.py
backend/marketplace/views/product_views.py
backend/requirements.txt
frontend/market-palace/.gitignore
frontend/market-palace/eslint.config.js
frontend/market-palace/index.html
frontend/market-palace/package.json
frontend/market-palace/public/vite.svg
frontend/market-palace/README.md
frontend/market-palace/repomix-output.xml
frontend/market-palace/src/App.css
frontend/market-palace/src/App.tsx
frontend/market-palace/src/assets/common/icon/bell-fill.svg
frontend/market-palace/src/assets/common/icon/bell-slash-fill.svg
frontend/market-palace/src/assets/common/icon/bell-slash.svg
frontend/market-palace/src/assets/common/icon/bell.svg
frontend/market-palace/src/assets/common/icon/bookmark-star-fill.svg
frontend/market-palace/src/assets/common/icon/bookmark-star.svg
frontend/market-palace/src/assets/common/icon/cart.svg
frontend/market-palace/src/assets/common/icon/clock-fill.svg
frontend/market-palace/src/assets/common/icon/clock-history.svg
frontend/market-palace/src/assets/common/icon/comment-fill.svg
frontend/market-palace/src/assets/common/icon/comment.svg
frontend/market-palace/src/assets/common/icon/download.svg
frontend/market-palace/src/assets/common/icon/gift-fill.svg
frontend/market-palace/src/assets/common/icon/gift.svg
frontend/market-palace/src/assets/common/icon/home-fill.svg
frontend/market-palace/src/assets/common/icon/home.svg
frontend/market-palace/src/assets/common/icon/list.svg
frontend/market-palace/src/assets/common/icon/search.svg
frontend/market-palace/src/assets/common/icon/settings-fill.svg
frontend/market-palace/src/assets/common/icon/settings.svg
frontend/market-palace/src/assets/common/icon/share-fill.svg
frontend/market-palace/src/assets/common/icon/share.svg
frontend/market-palace/src/assets/common/icon/shop-fill.svg
frontend/market-palace/src/assets/common/icon/shop.svg
frontend/market-palace/src/assets/common/icon/suit-heart-fill.svg
frontend/market-palace/src/assets/common/icon/suit-heart.svg
frontend/market-palace/src/assets/common/logo/logo1.svg
frontend/market-palace/src/assets/react.svg
frontend/market-palace/src/components/Header.css
frontend/market-palace/src/components/Header.tsx
frontend/market-palace/src/components/Sidebar.css
frontend/market-palace/src/components/Sidebar.tsx
frontend/market-palace/src/features/products/api/productAPI.ts
frontend/market-palace/src/features/products/components/Modal.css
frontend/market-palace/src/features/products/components/Modal.tsx
frontend/market-palace/src/features/products/components/ProductCard.tsx
frontend/market-palace/src/features/products/components/ProductDetailCard.css
frontend/market-palace/src/features/products/components/ProductDetailCard.tsx
frontend/market-palace/src/features/products/pages/ProductPage.tsx
frontend/market-palace/src/features/seller/components/AccountCard.css
frontend/market-palace/src/features/seller/components/AccountCard.tsx
frontend/market-palace/src/features/seller/components/ProductCard.css
frontend/market-palace/src/features/seller/components/ProductCard.tsx
frontend/market-palace/src/features/seller/components/ProductList.css
frontend/market-palace/src/features/seller/components/ProductList.tsx
frontend/market-palace/src/features/seller/components/SellerNavBar.css
frontend/market-palace/src/features/seller/components/SellerNavBar.tsx
frontend/market-palace/src/features/seller/components/SortFilterBar.css
frontend/market-palace/src/features/seller/components/SortFilterBar.tsx
frontend/market-palace/src/features/seller/pages/SellerProfilePage.css
frontend/market-palace/src/features/seller/pages/SellerProfilePage.tsx
frontend/market-palace/src/index.css
frontend/market-palace/src/main.tsx
frontend/market-palace/src/utils/getIconUrl.ts
frontend/market-palace/src/vite-env.d.ts
frontend/market-palace/tsconfig.app.json
frontend/market-palace/tsconfig.json
frontend/market-palace/tsconfig.node.json
frontend/market-palace/vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="backend/config/asgi.py">
"""
ASGI config for config project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings")

application = get_asgi_application()
</file>

<file path="backend/config/settings.py">
"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-cjl@5h+duf7)!-guf5_k6l0je@!d(8y5$qgk5=on53!n@dh&z*"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'corsheaders',                   # ← 追加
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',  # Django REST Framework
    'marketplace',     # 作成したアプリケーション
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # ← 一番上に追加
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 開発時だけなら、全オリジン許可でも OK
# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',   # Vite dev サーバー
    'http://127.0.0.1:8001',    # Django API を立ち上げたポート
]
</file>

<file path="backend/config/urls.py">
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('api/', include('marketplace.urls.product_urls')),
]
</file>

<file path="backend/config/wsgi.py">
"""
WSGI config for config project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings")

application = get_wsgi_application()
</file>

<file path="backend/manage.py">
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings")
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == "__main__":
    main()
</file>

<file path="backend/marketplace/admin.py">
from django.contrib import admin
from marketplace.models.product import Product, ProductLicense
from marketplace.models.license import License
from marketplace.models.tag import Tag

admin.site.register(Product)
admin.site.register(ProductLicense)
admin.site.register(License)
admin.site.register(Tag)
</file>

<file path="backend/marketplace/apps.py">
from django.apps import AppConfig


class MarketplaceConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "marketplace"
</file>

<file path="backend/marketplace/migrations/0001_initial.py">
# Generated by Django 5.2 on 2025-04-18 18:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("thumbnail_url", models.URLField()),
                ("images", models.JSONField(default=list)),
                (
                    "rating",
                    models.CharField(
                        choices=[("all", "All Ages"), ("12+", "12+"), ("18+", "18+")],
                        default="all",
                        max_length=10,
                    ),
                ),
                ("allow_ai_use", models.BooleanField(default=False)),
                ("is_ai_generated", models.BooleanField(default=False)),
                ("formats", models.JSONField(default=list)),
                ("release_date", models.DateField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creators",
                    models.ManyToManyField(
                        related_name="created_products", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductLicense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "license",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketplace.license",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_licenses",
                        to="marketplace.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("product", "license")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="licenses",
            field=models.ManyToManyField(
                related_name="products",
                through="marketplace.ProductLicense",
                to="marketplace.license",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="tags",
            field=models.ManyToManyField(related_name="products", to="marketplace.tag"),
        ),
    ]
</file>

<file path="backend/marketplace/models.py">
from django.db import models

# Create your models here.
</file>

<file path="backend/marketplace/models/license.py">
from django.db import models

class License(models.Model):
    """
    ライセンスの種類（マスタ）。
    """
    name = models.CharField(max_length=100, unique=True)

    def __str__(self):
        return self.name
</file>

<file path="backend/marketplace/models/product.py">
from django.db import models
from django.contrib.auth.models import User
from marketplace.models.license import License
from marketplace.models.tag import Tag

class Product(models.Model):
    title = models.CharField(max_length=255)
    description = models.TextField()
    thumbnail_url = models.URLField()
    images = models.JSONField(default=list)
    creators = models.ManyToManyField(User, related_name="created_products")
    tags = models.ManyToManyField(Tag, related_name="products")
    rating = models.CharField(
        max_length=10,
        choices=[("all", "All Ages"), ("12+", "12+"), ("18+", "18+")],
        default="all"
    )
    allow_ai_use = models.BooleanField(default=False)
    is_ai_generated = models.BooleanField(default=False)
    formats = models.JSONField(default=list)
    licenses = models.ManyToManyField(
        License,
        through='ProductLicense',
        related_name='products'
    )
    release_date = models.DateField(null=True, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    view_count = models.PositiveIntegerField(default=0)

    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.title

class ProductLicense(models.Model):
    """
    製品ごとにライセンスと価格を紐づける中間モデル。
    """
    product = models.ForeignKey(
        Product,
        on_delete=models.CASCADE,
        related_name='product_licenses'
    )
    license = models.ForeignKey(
        License,
        on_delete=models.CASCADE
    )
    price = models.DecimalField(max_digits=10, decimal_places=2)

    class Meta:
        unique_together = ('product', 'license')

    def __str__(self):
        return f"{self.product.title} - {self.license.name}: ¥{self.price}"
</file>

<file path="backend/marketplace/models/tag.py">
from django.db import models

class Tag(models.Model):
    name = models.CharField(max_length=50, unique=True)

    def __str__(self):
        return self.name
</file>

<file path="backend/marketplace/serializers/license_serializer.py">
from rest_framework import serializers
from marketplace.models.license import License

class LicenseSerializer(serializers.ModelSerializer):
    class Meta:
        model = License
        fields = ["id", "name"]
</file>

<file path="backend/marketplace/serializers/product_serializer.py">
from rest_framework import serializers
from django.contrib.auth.models import User
from marketplace.models.product import Product, ProductLicense
from marketplace.serializers.tag_serializer import TagSerializer
from marketplace.serializers.license_serializer import LicenseSerializer

class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ["id", "username"]

class ProductLicenseSerializer(serializers.ModelSerializer):
    license = LicenseSerializer()

    class Meta:
        model = ProductLicense
        fields = ["license", "price"]

class ProductSerializer(serializers.ModelSerializer):
    creators = UserSerializer(many=True)
    tags = TagSerializer(many=True)
    licenses = ProductLicenseSerializer(source="product_licenses", many=True)

    class Meta:
        model = Product
        fields = [
            "id", "title", "description",
            "thumbnail_url", "images",
            "creators", "tags", "rating",
            "allow_ai_use", "is_ai_generated",
            "formats", "licenses",
            "release_date", "updated_at",
            "view_count",
        ]
</file>

<file path="backend/marketplace/serializers/tag_serializer.py">
from rest_framework import serializers
from marketplace.models.tag import Tag

class TagSerializer(serializers.ModelSerializer):
    class Meta:
        model = Tag
        fields = ["id", "name"]
</file>

<file path="backend/marketplace/tests.py">
from django.test import TestCase

# Create your tests here.
</file>

<file path="backend/marketplace/urls/product_urls.py">
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from marketplace.views.product_views import ProductViewSet

router = DefaultRouter()
router.register(r'products', ProductViewSet, basename='product')

urlpatterns = [
    path('', include(router.urls)),
]
</file>

<file path="backend/marketplace/views.py">
from django.shortcuts import render

# Create your views here.
</file>

<file path="backend/marketplace/views/product_views.py">
from rest_framework import viewsets
from marketplace.models.product import Product
from marketplace.serializers.product_serializer import ProductSerializer

class ProductViewSet(viewsets.ModelViewSet):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer
</file>

<file path="backend/requirements.txt">
asgiref==3.8.1
Django==5.2
djangorestframework==3.16.0
sqlparse==0.5.3
tzdata==2025.2
</file>

<file path="frontend/market-palace/.gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="frontend/market-palace/eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
)
</file>

<file path="frontend/market-palace/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="frontend/market-palace/package.json">
{
  "name": "market-palace",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/lab": "^7.0.0-beta.11",
    "@mui/material": "^7.0.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-responsive-masonry": "^2.7.1",
    "react-router-dom": "^7.5.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react-swc": "^3.8.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  }
}
</file>

<file path="frontend/market-palace/public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="frontend/market-palace/README.md">
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config({
  extends: [
    // Remove ...tseslint.configs.recommended and replace with this
    ...tseslint.configs.recommendedTypeChecked,
    // Alternatively, use this for stricter rules
    ...tseslint.configs.strictTypeChecked,
    // Optionally, add this for stylistic rules
    ...tseslint.configs.stylisticTypeChecked,
  ],
  languageOptions: {
    // other options...
    parserOptions: {
      project: ['./tsconfig.node.json', './tsconfig.app.json'],
      tsconfigRootDir: import.meta.dirname,
    },
  },
})
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config({
  plugins: {
    // Add the react-x and react-dom plugins
    'react-x': reactX,
    'react-dom': reactDom,
  },
  rules: {
    // other rules...
    // Enable its recommended typescript rules
    ...reactX.configs['recommended-typescript'].rules,
    ...reactDom.configs.recommended.rules,
  },
})
```
</file>

<file path="frontend/market-palace/repomix-output.xml">
This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.gitignore
eslint.config.js
index.html
package.json
public/vite.svg
README.md
src/App.css
src/App.tsx
src/assets/common/icon/bell-fill.svg
src/assets/common/icon/bell-slash-fill.svg
src/assets/common/icon/bell-slash.svg
src/assets/common/icon/bell.svg
src/assets/common/icon/bookmark-star-fill.svg
src/assets/common/icon/bookmark-star.svg
src/assets/common/icon/cart.svg
src/assets/common/icon/clock-fill.svg
src/assets/common/icon/clock-history.svg
src/assets/common/icon/comment-fill.svg
src/assets/common/icon/comment.svg
src/assets/common/icon/download.svg
src/assets/common/icon/gift-fill.svg
src/assets/common/icon/gift.svg
src/assets/common/icon/home-fill.svg
src/assets/common/icon/home.svg
src/assets/common/icon/list.svg
src/assets/common/icon/search.svg
src/assets/common/icon/settings-fill.svg
src/assets/common/icon/settings.svg
src/assets/common/icon/shop-fill.svg
src/assets/common/icon/shop.svg
src/assets/common/icon/suit-heart-fill.svg
src/assets/common/icon/suit-heart.svg
src/assets/common/logo/logo1.svg
src/assets/react.svg
src/components/Header.css
src/components/Header.tsx
src/components/Sidebar.css
src/components/Sidebar.tsx
src/features/seller/components/AccountCard.css
src/features/seller/components/AccountCard.tsx
src/features/seller/components/ProductCard.css
src/features/seller/components/ProductCard.tsx
src/features/seller/components/ProductList.css
src/features/seller/components/ProductList.tsx
src/features/seller/components/SellerNavBar.css
src/features/seller/components/SellerNavBar.tsx
src/features/seller/components/SortFilterBar.css
src/features/seller/components/SortFilterBar.tsx
src/features/seller/pages/SellerProfilePage.css
src/features/seller/pages/SellerProfilePage.tsx
src/index.css
src/main.tsx
src/utils/getIconUrl.ts
src/vite-env.d.ts
tsconfig.app.json
tsconfig.json
tsconfig.node.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
)
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "market-palace",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/lab": "^7.0.0-beta.11",
    "@mui/material": "^7.0.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-responsive-masonry": "^2.7.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react-swc": "^3.8.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  }
}
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config({
  extends: [
    // Remove ...tseslint.configs.recommended and replace with this
    ...tseslint.configs.recommendedTypeChecked,
    // Alternatively, use this for stricter rules
    ...tseslint.configs.strictTypeChecked,
    // Optionally, add this for stylistic rules
    ...tseslint.configs.stylisticTypeChecked,
  ],
  languageOptions: {
    // other options...
    parserOptions: {
      project: ['./tsconfig.node.json', './tsconfig.app.json'],
      tsconfigRootDir: import.meta.dirname,
    },
  },
})
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config({
  plugins: {
    // Add the react-x and react-dom plugins
    'react-x': reactX,
    'react-dom': reactDom,
  },
  rules: {
    // other rules...
    // Enable its recommended typescript rules
    ...reactX.configs['recommended-typescript'].rules,
    ...reactDom.configs.recommended.rules,
  },
})
```
</file>

<file path="src/App.css">
#root {
  width: 100%;
  /* max-width: 1280px; */
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* ヘッダーは上部に固定 */
.main-layout {
  display: flex;
  /* サイドバーの幅分だけマージン（またはpadding）を左側に追加 */
  margin-left: 80px; /* Sidebar の幅と同じ値 */
}

/* content-area は主要コンテンツ部分 */
.content-area {
  flex: 1;
  padding-top: 20px;
}
</file>

<file path="src/App.tsx">
// src/App.tsx
// import React from "react";
import "./App.css";
import Header from "./components/Header";
import Sidebar from "./components/Sidebar";
import SellerProfilePage from "./features/seller/pages/SellerProfilePage";

function App() {
  return (
    <div className="app-container">
      <Header />
      <div className="main-layout">
        {/* サイドバーは固定しているが、ここでは全体のレイアウトのためのスペースとして */}
        <Sidebar />
        <div className="content-area">
          <SellerProfilePage />
        </div>
      </div>
    </div>
  );
}

export default App;
</file>

<file path="src/assets/common/icon/bell-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901"/>
</svg>
</file>

<file path="src/assets/common/icon/bell-slash-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-slash-fill" viewBox="0 0 16 16">
  <path d="M5.164 14H15c-1.5-1-2-5.902-2-7q0-.396-.06-.776zm6.288-10.617A5 5 0 0 0 8.995 2.1a1 1 0 1 0-1.99 0A5 5 0 0 0 3 7c0 .898-.335 4.342-1.278 6.113zM10 15a2 2 0 1 1-4 0zm-9.375.625a.53.53 0 0 0 .75.75l14.75-14.75a.53.53 0 0 0-.75-.75z"/>
</svg>
</file>

<file path="src/assets/common/icon/bell-slash.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-slash" viewBox="0 0 16 16">
  <path d="M5.164 14H15c-.299-.199-.557-.553-.78-1-.9-1.8-1.22-5.12-1.22-6q0-.396-.06-.776l-.938.938c.02.708.157 2.154.457 3.58.161.767.377 1.566.663 2.258H6.164zm5.581-9.91a4 4 0 0 0-1.948-1.01L8 2.917l-.797.161A4 4 0 0 0 4 7c0 .628-.134 2.197-.459 3.742q-.075.358-.166.718l-1.653 1.653q.03-.055.059-.113C2.679 11.2 3 7.88 3 7c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0c.942.19 1.788.645 2.457 1.284zM10 15a2 2 0 1 1-4 0zm-9.375.625a.53.53 0 0 0 .75.75l14.75-14.75a.53.53 0 0 0-.75-.75z"/>
</svg>
</file>

<file path="src/assets/common/icon/bell.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2M8 1.918l-.797.161A4 4 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4 4 0 0 0-3.203-3.92zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5 5 0 0 1 13 6c0 .88.32 4.2 1.22 6"/>
</svg>
</file>

<file path="src/assets/common/icon/bookmark-star-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-star-fill" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5M8.16 4.1a.178.178 0 0 0-.32 0l-.634 1.285a.18.18 0 0 1-.134.098l-1.42.206a.178.178 0 0 0-.098.303L6.58 6.993c.042.041.061.1.051.158L6.39 8.565a.178.178 0 0 0 .258.187l1.27-.668a.18.18 0 0 1 .165 0l1.27.668a.178.178 0 0 0 .257-.187L9.368 7.15a.18.18 0 0 1 .05-.158l1.028-1.001a.178.178 0 0 0-.098-.303l-1.42-.206a.18.18 0 0 1-.134-.098z"/>
</svg>
</file>

<file path="src/assets/common/icon/bookmark-star.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-star" viewBox="0 0 16 16">
  <path d="M7.84 4.1a.178.178 0 0 1 .32 0l.634 1.285a.18.18 0 0 0 .134.098l1.42.206c.145.021.204.2.098.303L9.42 6.993a.18.18 0 0 0-.051.158l.242 1.414a.178.178 0 0 1-.258.187l-1.27-.668a.18.18 0 0 0-.165 0l-1.27.668a.178.178 0 0 1-.257-.187l.242-1.414a.18.18 0 0 0-.05-.158l-1.03-1.001a.178.178 0 0 1 .098-.303l1.42-.206a.18.18 0 0 0 .134-.098z"/>
  <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1z"/>
</svg>
</file>

<file path="src/assets/common/icon/cart.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart" viewBox="0 0 16 16">
  <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l1.313 7h8.17l1.313-7zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/>
</svg>
</file>

<file path="src/assets/common/icon/clock-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71z"/>
</svg>
</file>

<file path="src/assets/common/icon/clock-history.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-history" viewBox="0 0 16 16">
  <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022zm2.004.45a7 7 0 0 0-.985-.299l.219-.976q.576.129 1.126.342zm1.37.71a7 7 0 0 0-.439-.27l.493-.87a8 8 0 0 1 .979.654l-.615.789a7 7 0 0 0-.418-.302zm1.834 1.79a7 7 0 0 0-.653-.796l.724-.69q.406.429.747.91zm.744 1.352a7 7 0 0 0-.214-.468l.893-.45a8 8 0 0 1 .45 1.088l-.95.313a7 7 0 0 0-.179-.483m.53 2.507a7 7 0 0 0-.1-1.025l.985-.17q.1.58.116 1.17zm-.131 1.538q.05-.254.081-.51l.993.123a8 8 0 0 1-.23 1.155l-.964-.267q.069-.247.12-.501m-.952 2.379q.276-.436.486-.908l.914.405q-.24.54-.555 1.038zm-.964 1.205q.183-.183.35-.378l.758.653a8 8 0 0 1-.401.432z"/>
  <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0z"/>
  <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5"/>
</svg>
</file>

<file path="src/assets/common/icon/comment-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-right-text-fill" viewBox="0 0 16 16">
  <path d="M16 2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h9.586a1 1 0 0 1 .707.293l2.853 2.853a.5.5 0 0 0 .854-.353zM3.5 3h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1"/>
</svg>
</file>

<file path="src/assets/common/icon/comment.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-right-text" viewBox="0 0 16 16">
  <path d="M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z"/>
  <path d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6m0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>
</file>

<file path="src/assets/common/icon/download.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
  <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
  <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
</svg>
</file>

<file path="src/assets/common/icon/gift-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gift-fill" viewBox="0 0 16 16">
  <path d="M3 2.5a2.5 2.5 0 0 1 5 0 2.5 2.5 0 0 1 5 0v.006c0 .07 0 .27-.038.494H15a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h2.038A3 3 0 0 1 3 2.506zm1.068.5H7v-.5a1.5 1.5 0 1 0-3 0c0 .085.002.274.045.43zM9 3h2.932l.023-.07c.043-.156.045-.345.045-.43a1.5 1.5 0 0 0-3 0zm6 4v7.5a1.5 1.5 0 0 1-1.5 1.5H9V7zM2.5 16A1.5 1.5 0 0 1 1 14.5V7h6v9z"/>
</svg>
</file>

<file path="src/assets/common/icon/gift.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gift" viewBox="0 0 16 16">
  <path d="M3 2.5a2.5 2.5 0 0 1 5 0 2.5 2.5 0 0 1 5 0v.006c0 .07 0 .27-.038.494H15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 14.5V7a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h2.038A3 3 0 0 1 3 2.506zm1.068.5H7v-.5a1.5 1.5 0 1 0-3 0c0 .085.002.274.045.43zM9 3h2.932l.023-.07c.043-.156.045-.345.045-.43a1.5 1.5 0 0 0-3 0zM1 4v2h6V4zm8 0v2h6V4zm5 3H9v8h4.5a.5.5 0 0 0 .5-.5zm-7 8V7H2v7.5a.5.5 0 0 0 .5.5z"/>
</svg>
</file>

<file path="src/assets/common/icon/home-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 48 48" width="48px" height="48px"><path d="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9	C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52	C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z"/></svg>
</file>

<file path="src/assets/common/icon/home.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 48 48" width="48px" height="48px"><path d="M 23.951172 4 A 1.50015 1.50015 0 0 0 23.072266 4.3222656 L 8.859375 15.519531 C 7.0554772 16.941163 6 19.113506 6 21.410156 L 6 40.5 C 6 41.863594 7.1364058 43 8.5 43 L 18.5 43 C 19.863594 43 21 41.863594 21 40.5 L 21 30.5 C 21 30.204955 21.204955 30 21.5 30 L 26.5 30 C 26.795045 30 27 30.204955 27 30.5 L 27 40.5 C 27 41.863594 28.136406 43 29.5 43 L 39.5 43 C 40.863594 43 42 41.863594 42 40.5 L 42 21.410156 C 42 19.113506 40.944523 16.941163 39.140625 15.519531 L 24.927734 4.3222656 A 1.50015 1.50015 0 0 0 23.951172 4 z M 24 7.4101562 L 37.285156 17.876953 C 38.369258 18.731322 39 20.030807 39 21.410156 L 39 40 L 30 40 L 30 30.5 C 30 28.585045 28.414955 27 26.5 27 L 21.5 27 C 19.585045 27 18 28.585045 18 30.5 L 18 40 L 9 40 L 9 21.410156 C 9 20.030807 9.6307412 18.731322 10.714844 17.876953 L 24 7.4101562 z"/></svg>
</file>

<file path="src/assets/common/icon/list.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/>
</svg>
</file>

<file path="src/assets/common/icon/search.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>
</file>

<file path="src/assets/common/icon/settings-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px"><path d="M20.726,14.204C20.908,13.483,21,12.745,21,12s-0.092-1.483-0.274-2.204l1.001-0.758c0.501-0.379,0.643-1.077,0.328-1.621	l-1.059-1.835c-0.315-0.544-0.99-0.77-1.568-0.525l-1.167,0.492c-1.075-1.047-2.375-1.8-3.807-2.205l-0.156-1.249	C14.221,1.471,13.688,1,13.059,1h-2.117c-0.629,0-1.163,0.471-1.24,1.095L9.545,3.344C8.113,3.749,6.813,4.501,5.738,5.549	L4.572,5.057c-0.58-0.243-1.253-0.019-1.569,0.526L1.944,7.417C1.63,7.961,1.771,8.659,2.272,9.039l1.001,0.758	C3.092,10.517,3,11.255,3,12s0.092,1.483,0.274,2.204l-1.001,0.758c-0.501,0.379-0.643,1.077-0.328,1.621l1.059,1.835	c0.315,0.545,0.988,0.77,1.568,0.525l1.166-0.492c1.076,1.047,2.376,1.8,3.808,2.205l0.156,1.25C9.779,22.529,10.312,23,10.941,23	h2.117c0.629,0,1.162-0.471,1.24-1.095l0.156-1.249c1.432-0.405,2.732-1.157,3.808-2.205l1.165,0.492	c0.579,0.243,1.253,0.019,1.569-0.526l1.059-1.834c0.314-0.544,0.173-1.242-0.328-1.622L20.726,14.204z M12,16c-2.206,0-4-1.794-4-4	s1.794-4,4-4s4,1.794,4,4S14.206,16,12,16z"/></svg>
</file>

<file path="src/assets/common/icon/settings.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px"><path d="M 10.941406 0.99804688 C 10.31639 0.99804688 9.77815 1.4729587 9.7011719 2.09375 L 9.5351562 3.4199219 C 8.1077936 3.8320377 6.8433087 4.5736193 5.8046875 5.5761719 L 4.5722656 5.0566406 C 3.9955251 4.8130175 3.3160841 5.0419142 3.0039062 5.5820312 L 1.9453125 7.4160156 C 1.6333733 7.9557199 1.7748716 8.6597492 2.2714844 9.0371094 L 3.3339844 9.8417969 C 3.1596002 10.540468 3 11.248018 3 12 C 3 12.751982 3.1595527 13.459904 3.3339844 14.158203 L 2.2734375 14.960938 C 1.7749828 15.337877 1.632637 16.041966 1.9433594 16.582031 A 0.750075 0.750075 0 0 0 1.9453125 16.583984 L 3.0039062 18.417969 C 3.3160841 18.958086 3.9955251 19.186983 4.5722656 18.943359 L 5.8066406 18.423828 C 6.8454475 19.426294 8.1095764 20.168168 9.5371094 20.580078 L 9.7011719 21.90625 C 9.7781499 22.527041 10.31639 23.001953 10.941406 23.001953 L 13.058594 23.001953 C 13.68361 23.001953 14.22185 22.527041 14.298828 21.90625 L 14.464844 20.580078 C 15.892206 20.167962 17.156692 19.426381 18.195312 18.423828 L 19.429688 18.943359 C 20.004742 19.186271 20.686235 18.957979 20.998047 18.416016 L 22.056641 16.583984 C 22.369055 16.043458 22.226444 15.340424 21.730469 14.962891 A 0.750075 0.750075 0 0 0 21.728516 14.960938 L 20.666016 14.158203 C 20.840437 13.459834 21 12.751982 21 12 C 21 11.248018 20.840447 10.540096 20.666016 9.8417969 L 21.726562 9.0390625 C 22.225017 8.6621216 22.367363 7.9580337 22.056641 7.4179688 A 0.750075 0.750075 0 0 0 22.054688 7.4160156 L 20.996094 5.5820312 C 20.683916 5.0419142 20.004475 4.8130175 19.427734 5.0566406 L 18.193359 5.5761719 C 17.154553 4.5737057 15.890424 3.8318319 14.462891 3.4199219 L 14.298828 2.09375 C 14.22185 1.4729587 13.68361 0.99804687 13.058594 0.99804688 L 10.941406 0.99804688 z M 11.162109 2.4980469 L 12.837891 2.4980469 L 13.029297 4.0390625 A 0.750075 0.750075 0 0 0 13.613281 4.6777344 C 15.148094 5.0146665 16.501136 5.8215425 17.527344 6.9433594 A 0.750075 0.750075 0 0 0 18.373047 7.1289062 L 19.806641 6.5234375 L 20.646484 7.9765625 L 19.412109 8.9101562 A 0.750075 0.750075 0 0 0 19.150391 9.734375 C 19.376841 10.449194 19.5 11.209251 19.5 12 C 19.5 12.790749 19.377004 13.54938 19.150391 14.265625 A 0.750075 0.750075 0 0 0 19.412109 15.089844 L 20.648438 16.023438 L 19.808594 17.476562 L 18.373047 16.871094 A 0.750075 0.750075 0 0 0 17.529297 17.056641 C 16.503089 18.178458 15.148094 18.985333 13.613281 19.322266 A 0.750075 0.750075 0 0 0 13.03125 19.960938 L 12.837891 21.501953 L 11.162109 21.501953 L 10.970703 19.960938 A 0.750075 0.750075 0 0 0 10.386719 19.322266 C 8.8519063 18.985333 7.4988637 18.178458 6.4726562 17.056641 A 0.750075 0.750075 0 0 0 5.6269531 16.871094 L 4.1933594 17.476562 L 3.3535156 16.023438 L 4.5878906 15.089844 A 0.750075 0.750075 0 0 0 4.8496094 14.265625 C 4.623159 13.550806 4.5 12.790749 4.5 12 C 4.5 11.209251 4.6230509 10.448492 4.8496094 9.7324219 A 0.750075 0.750075 0 0 0 4.5878906 8.9082031 L 3.3554688 7.9765625 L 4.1933594 6.5234375 L 5.6269531 7.1289062 A 0.750075 0.750075 0 0 0 6.4707031 6.9433594 C 7.4969106 5.8215425 8.8519063 5.0146665 10.386719 4.6777344 A 0.750075 0.750075 0 0 0 10.96875 4.0390625 L 11.162109 2.4980469 z M 12 8 C 10.729167 8 9.6810741 8.5035667 9.0019531 9.2675781 C 8.3228321 10.03159 8 11.020833 8 12 C 8 12.979167 8.3228321 13.96841 9.0019531 14.732422 C 9.6810741 15.496433 10.729167 16 12 16 C 13.270833 16 14.318926 15.496433 14.998047 14.732422 C 15.677168 13.96841 16 12.979167 16 12 C 16 11.020833 15.677168 10.03159 14.998047 9.2675781 C 14.318926 8.5035667 13.270833 8 12 8 z M 12 9.5 C 12.895833 9.5 13.472741 9.8089332 13.876953 10.263672 C 14.281165 10.71841 14.5 11.354167 14.5 12 C 14.5 12.645833 14.281165 13.28159 13.876953 13.736328 C 13.472741 14.191067 12.895833 14.5 12 14.5 C 11.104167 14.5 10.527259 14.191067 10.123047 13.736328 C 9.7188349 13.28159 9.5 12.645833 9.5 12 C 9.5 11.354167 9.7188349 10.71841 10.123047 10.263672 C 10.527259 9.8089332 11.104167 9.5 12 9.5 z"/></svg>
</file>

<file path="src/assets/common/icon/shop-fill.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44.74 39.02"><path d="M33.36,6.74l1.46,6.23c.11.48-.24,1.1-.84,1.26-.85.22-1.39-.24-1.46-.52l-1.46-6.52c-.05-.22,0-.95.89-1.12.95-.18,1.36.45,1.41.67ZM35.03,21.3c1.54,1.42,3.09,1.73,4.55,1.82,1.66.11,3.24-.53,4.23-1.71.79-.94,1.09-2.09.82-3.18-.5-2.04-2.49-9.92-3.92-15.24-.47-1.76-2.07-2.99-3.9-2.99H7.91c-1.82,0-3.43,1.23-3.9,2.99C2.59,8.29.59,16.18.09,18.23c-.26,1.09.04,2.24.82,3.18,1,1.18,2.58,1.82,4.23,1.71,1.46-.1,3.01-.4,4.55-1.82.84,1.3,2.18,2.01,3.84,2.01h0c2.5,0,3.84-1.31,4.72-2.55.82,1.21,2.05,2.53,4.09,2.53h.01c2.11,0,3.42-1.37,4.15-2.45.87,1.18,2.23,2.46,4.66,2.47h0c1.67,0,3-.71,3.84-2.01ZM12.29,6.07c.89.17.94.9.89,1.12l-1.46,6.52c-.06.28-.6.74-1.46.52-.6-.16-.96-.78-.84-1.26l1.46-6.23c.05-.22.46-.86,1.41-.67ZM19.18,6.09c.9.1,1,.83.97,1.05l-.93,6.11c-.04.28-.54.78-1.41.63-.61-.11-1.02-.71-.94-1.19l.95-5.82c.04-.22.39-.89,1.36-.78ZM26.42,6.87l.95,5.82c.08.48-.32,1.08-.94,1.19-.87.16-1.37-.35-1.41-.63l-.93-6.11c-.03-.22.07-.95.97-1.05.96-.11,1.32.56,1.36.78Z"/><path d="M39.58,24.63c-1.16-.63-2.69-.45-4.11-1.46-.24-.17-.59-.13-.78.1-.84,1.01-2.05,1.55-3.51,1.55h0c-2.01,0-3.28-.88-4.16-1.84-.27-.3-.73-.29-.99.02-.78.91-1.95,1.8-3.66,1.8h-.01c-1.67,0-2.8-.89-3.6-1.87-.26-.31-.72-.32-.98-.02-.88,1.01-2.16,1.91-4.22,1.91h0c-1.46,0-2.66-.54-3.51-1.55-.19-.23-.54-.27-.78-.1-1.42,1.01-2.94.83-4.11,1.46-.37.2-.78,1.05-.78,1.5v10.38c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-7c0-.28.22-.5.5-.5h5c.28,0,.5.22.5.5v7c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-10.38c0-.45-.41-1.3-.78-1.5Z"/></svg>
</file>

<file path="src/assets/common/icon/shop.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44.74 39.02"><path d="M24.87,29.02c.28,0,.5.22.5.5v7c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-10.38c0-.45-.2-.87-.54-1.16l-.19-.16c-.45-.38-1.11-.37-1.56,0l-.18.15c-.34.29-.53.71-.53,1.15v9.89h-9v-6.5c0-1.92-1.58-3.5-3.5-3.5h-5c-1.92,0-3.5,1.58-3.5,3.5v6.5H7.37v-9.89c0-.44-.2-.87-.53-1.15l-.18-.15c-.45-.38-1.1-.38-1.56,0l-.19.16c-.34.29-.54.71-.54,1.16v10.38c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-7c0-.28.22-.5.5-.5h5Z"/><path d="M31.19,23.31h0c-2.43,0-3.8-1.29-4.66-2.47-.73,1.08-2.03,2.44-4.15,2.45h-.01c-2.03,0-3.27-1.32-4.09-2.53-.88,1.24-2.23,2.54-4.72,2.55h0c-1.67,0-3-.71-3.84-2.01-1.54,1.42-3.09,1.73-4.55,1.82-1.65.11-3.24-.53-4.23-1.71-.79-.94-1.09-2.09-.82-3.18.5-2.05,2.5-9.94,3.92-15.24C4.48,1.23,6.08,0,7.91,0h28.92c1.83,0,3.43,1.23,3.9,2.99,1.43,5.32,3.42,13.2,3.92,15.24.26,1.08-.04,2.24-.82,3.18-.99,1.18-2.58,1.82-4.23,1.71-1.46-.1-3.01-.4-4.55-1.82-.84,1.3-2.18,2.01-3.84,2.01ZM26.48,17.2c.78,0,1.51.4,1.92,1.06.95,1.51,1.51,2.05,2.78,2.05h0c.8,0,1.23-.3,1.53-1.06.3-.76.96-1.3,1.76-1.43.78-.13,1.58.16,2.1.77,1.11,1.3,2.1,1.46,3.19,1.53.83.05,1.44-.3,1.74-.65.16-.19.24-.39.2-.54-.49-2.03-2.48-9.87-3.9-15.17-.12-.45-.53-.77-1-.77H7.91c-.47,0-.88.32-1,.77-1.41,5.28-3.4,13.13-3.9,15.17-.04.14.04.35.2.54.29.35.91.71,1.74.65,1.09-.07,2.08-.24,3.19-1.53.52-.61,1.31-.9,2.1-.77.8.13,1.46.67,1.76,1.43.3.76.73,1.06,1.53,1.06h0c1.28,0,1.85-.55,2.81-2.09.43-.68,1.16-1.1,1.97-1.08.8,0,1.52.42,1.93,1.11.8,1.35,1.35,2.03,2.11,2.03h0c.56,0,1.24-.23,2.11-1.88h0c.38-.72,1.11-1.19,1.92-1.22.03,0,.06,0,.09,0Z"/><path d="M10.88,6.74l-1.46,6.23c-.11.48.24,1.1.84,1.26.85.22,1.39-.24,1.46-.52l1.46-6.52c.05-.22,0-.95-.89-1.12-.95-.18-1.36.45-1.41.67Z"/><path d="M17.82,6.87l-.95,5.82c-.08.48.32,1.08.94,1.19.87.16,1.37-.35,1.41-.63l.93-6.11c.03-.22-.07-.95-.97-1.05-.96-.11-1.32.56-1.36.78Z"/><path d="M33.36,6.74l1.46,6.23c.11.48-.24,1.1-.84,1.26-.85.22-1.39-.24-1.46-.52l-1.46-6.52c-.05-.22,0-.95.89-1.12.95-.18,1.36.45,1.41.67Z"/><path d="M26.42,6.87l.95,5.82c.08.48-.32,1.08-.94,1.19-.87.16-1.37-.35-1.41-.63l-.93-6.11c-.03-.22.07-.95.97-1.05.96-.11,1.32.56,1.36.78Z"/></svg>
</file>

<file path="src/assets/common/icon/suit-heart-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-heart-fill" viewBox="0 0 16 16">
  <path d="M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1"/>
</svg>
</file>

<file path="src/assets/common/icon/suit-heart.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-heart" viewBox="0 0 16 16">
  <path d="m8 6.236-.894-1.789c-.222-.443-.607-1.08-1.152-1.595C5.418 2.345 4.776 2 4 2 2.324 2 1 3.326 1 4.92c0 1.211.554 2.066 1.868 3.37.337.334.721.695 1.146 1.093C5.122 10.423 6.5 11.717 8 13.447c1.5-1.73 2.878-3.024 3.986-4.064.425-.398.81-.76 1.146-1.093C14.446 6.986 15 6.131 15 4.92 15 3.326 13.676 2 12 2c-.777 0-1.418.345-1.954.852-.545.515-.93 1.152-1.152 1.595zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.6 7.6 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z"/>
</svg>
</file>

<file path="src/assets/common/logo/logo1.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 234.52 57.42"><defs><style>.b{font-family:Arbotek-Ultra, Arbotek;font-size:55px;}</style></defs><text class="b" transform="translate(0 45.32)"><tspan x="0" y="0">D-Market</tspan></text></svg>
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/components/Header.css">
/* ヘッダー全体のレイアウト */
.header {
  position: fixed; /* スクロールしても固定 */
  top: 0; /* ページ上端に密着 */
  left: 0; /* 左端に密着 */
  width: 100%; /* 横幅いっぱい */

  z-index: 60; /* 他の要素より前面に表示 */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
  background-color: #ffffff;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
}

/* 左側コンテナ：ボタン機能付きアイコン画像を横並びに配置 */
.header__left {
  display: flex;
  align-items: center;
  gap: 8px;
}

/* 左側ボタン */
.header__list-button {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 4px;
}

/* 左側アイコン画像 */
.header__list-icon {
  width: 32px;
  height: 32px;
  object-fit: cover;
}

.header__logo-button {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 4px;
}

.header__logo {
  /* width: 32px; */
  height: 32px;
  /* object-fit: cover; */
}

/* 検索機能 */
.header__search {
  display: flex;
  align-items: center;
  flex: 1 1 auto;
  /* width: 100%; */
  max-width: 100%;
  height: 100%;
  background-color: #eee;
  border-radius: 10px;
  padding: 8px 8px;
  margin-right: 16px;
  margin-left: 16px;
}

.header__search-icon {
  margin-right: 4px;
  font-size: 1.2rem;
}

.header__search-input {
  flex: 1;
  border: none;
  background: transparent;
  outline: none;
  font-size: 1rem;
}

/* プレースホルダーの透過度50% */
.header__search-input::placeholder {
  color: rgba(0, 0, 0, 0.5);
}

.header__right {
  display: flex;
  gap: 0px; /* アイテム間の間隔 */
}

/* ログインボタン */
.header__login-button {
  background: transparent;
  border: none;
  font-size: 1rem;
  cursor: pointer;
  padding: 8px 12px;
  color: #333;
}

/* ユーザーアイコン */
.header__user-icon {
  width: 40px;
  height: 40px;
  overflow: hidden;
  border-radius: 50%;
  margin-left: 16px;
}

.header__user-icon img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* カート機能ボタン */
.header__cart-button {
  position: relative;
  margin-left: 16px;
  margin-right: 32px;
  cursor: pointer;
  font-size: 2rem;
}

/* 数字のオーバーレイ */
.header__cart-count {
  position: absolute;
  top: -4px;
  right: -4px;
  background-color: red;
  color: #fff;
  border-radius: 50%;
  padding: 2px 6px;
  font-size: 0.75rem;
}
</file>

<file path="src/components/Header.tsx">
// src/components/Header.tsx
import React from "react";
import "./Header.css";
import Icon800x800 from "@root/tests/assets/Icon800x800.png";
import { getIconUrl, getLogoUrl } from "@root/src/utils/getIconUrl";
// ※ユーザーアイコン・カートアイコンは、public/assets に配置した画像、または適切なパスで指定してください。
// ここでは簡易的にインラインの絵文字を利用していますが、実際のプロジェクトでは画像ファイルやアイコンライブラリを使用してください。

const Header: React.FC = () => {
  return (
    <header className="header">
      {/* 左側：ボタン機能付きアイコン画像 */}
      <div className="header__left">
        <button
          className="header__list-button"
          onClick={() => console.log("左ボタン1クリック")}
        >
          <img
            src={getIconUrl("list")}
            alt="左ボタン1"
            className="header__list-icon"
          />
        </button>
        <button
          className="header__logo-button"
          onClick={() => console.log("左ボタン2クリック")}
        >
          <img
            src={getLogoUrl("logo1")}
            alt="左ボタン2"
            className="header__logo"
          />
        </button>
      </div>
      {/* 検索機能 */}
      <div className="header__search">
        <img
          src={getIconUrl("search")}
          alt="検索"
          className="header__search-icon"
        />
        <input
          type="text"
          className="header__search-input"
          placeholder="検索"
        />
      </div>
      <div className="header__right">
        {/* ログインボタン */}
        <button className="header__login-button">ログイン</button>

        {/* ユーザーアイコン */}
        <div className="header__user-icon">
          <img src={Icon800x800} alt="User Icon" />
        </div>

        {/* カート機能ボタン */}
        <div className="header__cart-button">
          <img
            src={getIconUrl("cart")}
            alt="User Icon"
            width={32}
            height={32}
          />
          <span className="header__cart-count">12</span>
        </div>
      </div>
    </header>
  );
};

export default Header;
</file>

<file path="src/components/Sidebar.css">
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 80px; /* 固定幅 */
  display: flex;
  flex-direction: column;
  gap: 6px;
  padding: 4px;
  background-color: #ffffff;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
  padding-top: 72px;
  z-index: 50;
}

/* 以下、以前と同じスタイル */
.sidebar-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 8px;
  transition: background-color 0.3s;
}

.sidebar-item:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.sidebar-item-icon {
  width: 30px;
  height: 30px;
  /* object-fit: cover; */
}

.sidebar-item-label {
  margin-top: 4px;
  font-size: 0.8rem;
  color: #333;
}
</file>

<file path="src/components/Sidebar.tsx">
// src/components/Sidebar.tsx
import React from "react";
import "./Sidebar.css";
import { getIconUrl } from "@root/src/utils/getIconUrl";

export interface SidebarItem {
  id: number;
  iconName: string;
  label: string;
  onClick?: () => void;
}

// interface SidebarProps {
//   items: SidebarItem[];
// }

const Sidebar: React.FC = () => {
  const items: SidebarItem[] = [
    {
      id: 1,
      iconName: "home",
      label: "ホーム",
      onClick: () => console.log("ホーム"),
    },
    {
      id: 2,
      iconName: "suit-heart",
      label: "フォロー",
      onClick: () => console.log("フォロー"),
    },
    {
      id: 3,
      iconName: "bookmark-star",
      label: "お気に入り",
      onClick: () => console.log("お気に入り"),
    },
    {
      id: 4,
      iconName: "shop",
      label: "マイショップ",
      onClick: () => console.log("マイショップ"),
    },
    {
      id: 5,
      iconName: "bell",
      label: "通知",
      onClick: () => console.log("通知"),
    },
    {
      id: 6,
      iconName: "clock-history",
      label: "履歴",
      onClick: () => console.log("履歴"),
    },

    {
      id: 7,
      iconName: "settings",
      label: "設定",
      onClick: () => console.log("設定"),
    },
  ];

  return (
    <aside className="sidebar">
      {items.map((item) => (
        <button key={item.id} className="sidebar-item" onClick={item.onClick}>
          <img
            src={getIconUrl(item.iconName)}
            alt={item.label}
            className="sidebar-item-icon"
          />
          <span className="sidebar-item-label">{item.label}</span>
        </button>
      ))}
    </aside>
  );
};

export default Sidebar;
</file>

<file path="src/features/seller/components/AccountCard.css">
/* src/styles/AccountCard.css */
.account-card {
  border: 1px solid #ddd;
  padding: 16px;
  max-width: 3700px;
  margin: 20px auto;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border-radius: 8px;
}

.profile-section {
  display: flex;
  align-items: center;
  margin-bottom: 16px;
}

.profile-image {
  width: 200px;
  height: 200px;
  border-radius: 12px; /* ラウンドがかかった正方形 */
  object-fit: cover;
  margin-right: 16px;
}

.account-info {
  flex: 1;
}

.account-name {
  margin: 0;
  font-size: 24px;
  font-weight: bold;
  text-transform: uppercase;
  color: #000000;
}

.action-buttons {
  margin-top: 8px;
}

.action-buttons button {
  margin-right: 8px;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: bold;
  color: #fff;
}

.follow-button {
  background-color: #1da1f2;
}

.present-button {
  background-color: #ff5a5f;
}

.subscr-button {
  background-color: #28a745;
}

.sns-links {
  margin-top: 8px;
}

.sns-link {
  margin-right: 8px;
  color: #0077cc;
  text-decoration: none;
}

.sns-link:hover {
  text-decoration: underline;
}

.account-description {
  font-size: 16px;
  line-height: 1.5;
  margin-top: 16px;
  color: #000000;
}
</file>

<file path="src/features/seller/components/AccountCard.tsx">
// src/components/AccountCard.tsx
import React from "react";
import "./AccountCard.css";
import profileImage from "@root/tests/assets/Icon800x800.png";

interface SNSLink {
  name: string;
  url: string;
}

interface AccountCardProps {
  accountName: string;
  description: string;
  snsLinks: SNSLink[];
}

const AccountCard: React.FC<AccountCardProps> = ({
  accountName,
  description,
  snsLinks,
}) => {
  return (
    <div className="account-card">
      <div className="profile-section">
        {/* ① ラウンドがかかった正方形のアイコン画像（ここでは丸く表示しています） */}
        <img src={profileImage} alt="Profile" className="profile-image" />
        <div className="account-info">
          {/* ② アカウント名（太字、大文字） */}
          <h1 className="account-name">{accountName}</h1>
          {/* ③～⑤ フォロー、プレゼント、サブスクボタン */}
          <div className="action-buttons">
            <button className="follow-button">フォロー</button>
            <button className="present-button">プレゼントを送る</button>
            <button className="request-button">リクエストを送る</button>
            <button className="subscr-button">サブスク</button>
          </div>
          {/* ⑥ SNSリンク */}
          <div className="sns-links">
            {snsLinks.map((link, index) => (
              <a
                key={index}
                href={link.url}
                target="_blank"
                rel="noopener noreferrer"
                className="sns-link"
              >
                {link.name}
              </a>
            ))}
          </div>
        </div>
      </div>
      {/* ⑦ アカウント説明文 */}
      <p className="account-description">{description}</p>
    </div>
  );
};

export default AccountCard;
</file>

<file path="src/features/seller/components/ProductCard.css">
.product-card {
  background-color: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.product-image {
  width: 100%;
  display: block;
}

.product-title {
  font-size: 1rem;
  margin: 8px;
  color: #000;
}

.product-price {
  font-size: 0.9rem;
  margin: 0 8px 8px;
  color: #888;
}
.product-card img {
  width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
}
</file>

<file path="src/features/seller/components/ProductCard.tsx">
// src/features/seller/components/ProductCard.tsx
import React from "react";
import { Card, CardMedia, CardContent, Typography } from "@mui/material";

interface Product {
  id: number;
  title: string;
  imageUrl: string;
  price: number;
}

interface ProductCardProps {
  product: Product;
}

const ProductCard: React.FC<ProductCardProps> = ({ product }) => {
  return (
    <Card sx={{ width: "100%", boxShadow: 3 }}>
      <CardMedia
        component="img"
        image={product.imageUrl}
        alt={product.title}
        loading="lazy"
        sx={{ width: "100%", height: "auto", display: "block" }}
      />
      <CardContent>
        <Typography
          variant="subtitle1"
          gutterBottom
          sx={{
            overflow: "hidden",
            textOverflow: "ellipsis",
            display: "-webkit-box",
            WebkitLineClamp: 2, // 表示する行数を指定
            WebkitBoxOrient: "vertical",
          }}
        >
          {product.title}
        </Typography>
        <Typography variant="body2" color="text.secondary">
          ¥{product.price.toLocaleString()}
        </Typography>
      </CardContent>
    </Card>
  );
};

export default ProductCard;
</file>

<file path="src/features/seller/components/ProductList.css">
/* .product-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 16px;
  padding: 16px;
} */
.product-list-container {
  width: 100%;
  box-sizing: border-box;
  padding: 16px;
}
</file>

<file path="src/features/seller/components/ProductList.tsx">
// src/features/seller/components/ProductList.tsx
import React from "react";
import Masonry, { ResponsiveMasonry } from "react-responsive-masonry";
import ProductCard from "./ProductCard";
import Icon800x800 from "@root/tests/assets/Icon800x800.png";
import Icon800x1200 from "@root/tests/assets/Icon800x1200.png";
import PC3840x2400 from "@root/tests/assets/pc3840x2400.jpeg";
import "./ProductList.css";

interface Product {
  id: number;
  title: string;
  imageUrl: string;
  price: number;
}

const sampleProducts: Product[] = [
  {
    id: 1,
    title:
      "商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1",
    imageUrl: Icon800x1200,
    price: 1200,
  },
  { id: 2, title: "商品2", imageUrl: PC3840x2400, price: 1500 },
  { id: 3, title: "商品3", imageUrl: Icon800x800, price: 1800 },
  { id: 4, title: "商品4", imageUrl: PC3840x2400, price: 2200 },
  { id: 5, title: "商品5", imageUrl: Icon800x1200, price: 1200 },
  { id: 6, title: "商品6", imageUrl: PC3840x2400, price: 1500 },
  { id: 7, title: "商品7", imageUrl: Icon800x800, price: 1800 },
  { id: 8, title: "商品8", imageUrl: Icon800x1200, price: 2200 },
  { id: 9, title: "商品9", imageUrl: Icon800x1200, price: 2200 },
  { id: 10, title: "商品10", imageUrl: PC3840x2400, price: 1200 },
  { id: 11, title: "商品11", imageUrl: Icon800x1200, price: 1500 },
  { id: 12, title: "商品12", imageUrl: Icon800x800, price: 1800 },
  { id: 13, title: "商品13", imageUrl: Icon800x1200, price: 2200 },
  { id: 14, title: "商品4", imageUrl: PC3840x2400, price: 2200 },
  { id: 15, title: "商品5", imageUrl: Icon800x800, price: 1200 },
  { id: 16, title: "商品6", imageUrl: Icon800x1200, price: 1500 },
  { id: 17, title: "商品7", imageUrl: Icon800x1200, price: 1800 },
  { id: 18, title: "商品8", imageUrl: PC3840x2400, price: 2200 },
  { id: 19, title: "商品9", imageUrl: Icon800x1200, price: 2200 },
  { id: 20, title: "商品10", imageUrl: PC3840x2400, price: 1200 },
  { id: 21, title: "商品11", imageUrl: Icon800x1200, price: 1500 },
  { id: 22, title: "商品12", imageUrl: PC3840x2400, price: 1800 },
  { id: 23, title: "商品13", imageUrl: Icon800x1200, price: 2200 },
  // さらに多くの商品データ...
];

const ProductList: React.FC = () => {
  return (
    <div className="product-list-container">
      <ResponsiveMasonry
        columnsCountBreakPoints={{
          350: 2,
          768: 3,
          1024: 4,
          1280: 5,
          1580: 6,
          1780: 7,
          2080: 8,
        }}
      >
        <Masonry gutter="16px" sequential={false}>
          {sampleProducts.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </Masonry>
      </ResponsiveMasonry>
    </div>
  );
};

export default ProductList;
</file>

<file path="src/features/seller/components/SellerNavBar.css">
.seller-nav {
  display: flex;
  justify-content: center;
  gap: 6px;
  margin: 4px 0;
  background-color: transparent;
  padding: 8px;
  /* border-radius: 4px; */
  font-size: 1.2rem;
}

.nav-button {
  background: transparent;
  border: none;
  padding: 8px 16px;
  cursor: pointer;
  font-weight: normal;
  position: relative;
  color: rgb(175, 175, 175);

  transition: color 0.3s;
}

.nav-button::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  height: 2px;
  width: 100%;
  background-color: transparent;
  /* transition: background-color 0.3s; */
}
.nav-button.active {
  font-weight: bold;
  color: rgba(0, 0, 0, 1); /* アクティブ時の文字色を黒に設定 */
}
.nav-button.active::after {
  background-color: rgba(0, 0, 0, 1); /* アクティブなアンダーラインの色 */
}

.nav-button:hover::after {
  background-color: rgba(
    0,
    0,
    0,
    0.2
  ); /* ホバー時のアンダーライン（50%透過） */
}
</file>

<file path="src/features/seller/components/SellerNavBar.tsx">
import React from "react";
import "./SellerNavBar.css";

interface SellerNavBarProps {
  activeTab: "home" | "store" | "collection" | "market";
  onTabChange: (tab: "home" | "store" | "collection" | "market") => void;
}

const SellerNavBar: React.FC<SellerNavBarProps> = ({
  activeTab,
  onTabChange,
}) => {
  return (
    <nav className="seller-nav">
      {["ホーム", "一覧", "コレクション", "マーケット"].map((tab) => (
        <button
          key={tab}
          onClick={() =>
            onTabChange(tab as "home" | "store" | "collection" | "market")
          }
          className={`nav-button ${activeTab === tab ? "active" : ""}`}
        >
          {tab.toUpperCase()}
        </button>
      ))}
    </nav>
  );
};

export default SellerNavBar;
</file>

<file path="src/features/seller/components/SortFilterBar.css">
.sort-filter-bar {
  display: flex;
  gap: 12px;
  padding: 4px;
  justify-content: flex-start; /* 左寄せに変更 */
  position: relative;
  margin: 0 16px;
}

.sort-filter-bar button {
  color: rgb(255, 255, 255);
  padding: 4px 16px;
  background-color: #000000;
  cursor: pointer;
  border-radius: 24px;
  font-weight: bold;
  border: none;
  /* font-size: 0.9rem; */
}

.dropdown {
  position: absolute;
  top: 60px;
  color: rgba(0, 0, 0, 1);
  background-color: white;
  border: none;
  z-index: 1000;
  border-radius: 6px;
  padding: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.dropdown > div {
  padding: 6px 12px;
  cursor: pointer;
}

.dropdown > div:hover {
  background-color: #f0f0f0;
}

.overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.3);
  z-index: 500;
}
</file>

<file path="src/features/seller/components/SortFilterBar.tsx">
import React, { useState, useRef } from "react";
import "./SortFilterBar.css";

const sortOptions = ["人気順", "新しい順", "古い順", "安い順", "高い順"];
const filterOptions = [
  "すべて",
  "画像",
  "3Dモデル",
  "フォント",
  "PC壁紙",
  "スマホ壁紙",
  "テンプレート",
];

const SortFilterBar: React.FC = () => {
  const [sortValue, setSortValue] = useState("新しい順");
  const [filterValue, setFilterValue] = useState("すべて");
  const [openType, setOpenType] = useState<"sort" | "filter" | null>(null);
  const [dropdownStyle, setDropdownStyle] = useState<React.CSSProperties>({});

  const sortButtonRef = useRef<HTMLButtonElement>(null);
  const filterButtonRef = useRef<HTMLButtonElement>(null);

  const handleSelect = (type: "sort" | "filter", value: string) => {
    type === "sort" ? setSortValue(value) : setFilterValue(value);
    setOpenType(null);
  };

  const toggleDropdown = (type: "sort" | "filter") => {
    if (openType === type) {
      setOpenType(null);
    } else {
      const buttonRef = type === "sort" ? sortButtonRef : filterButtonRef;
      if (buttonRef.current) {
        const rect = buttonRef.current.getBoundingClientRect();
        const offsetParentRect =
          buttonRef.current.offsetParent?.getBoundingClientRect();
        setDropdownStyle({
          position: "absolute",
          top: rect.bottom + 5 - (offsetParentRect?.top || 0),
          left: rect.left - (offsetParentRect?.left || 0),
        });
      }
      setOpenType(type);
    }
  };

  return (
    <>
      {openType && (
        <div className="overlay" onClick={() => setOpenType(null)} />
      )}
      <div className="sort-filter-bar">
        <button ref={sortButtonRef} onClick={() => toggleDropdown("sort")}>
          {sortValue}
        </button>
        <button ref={filterButtonRef} onClick={() => toggleDropdown("filter")}>
          {filterValue}
        </button>

        {openType === "sort" && (
          <div className="dropdown" style={dropdownStyle}>
            {sortOptions.map((option) => (
              <div key={option} onClick={() => handleSelect("sort", option)}>
                {option}
              </div>
            ))}
          </div>
        )}

        {openType === "filter" && (
          <div className="dropdown" style={dropdownStyle}>
            {filterOptions.map((option) => (
              <div key={option} onClick={() => handleSelect("filter", option)}>
                {option}
              </div>
            ))}
          </div>
        )}
      </div>
    </>
  );
};

export default SortFilterBar;
</file>

<file path="src/features/seller/pages/SellerProfilePage.css">
.seller-profile {
  display: block;
  width: 100%;
  box-sizing: border-box;
}
</file>

<file path="src/features/seller/pages/SellerProfilePage.tsx">
import React, { useState } from "react";
import AccountCard from "../components/AccountCard";
import SellerNavBar from "../components/SellerNavBar";
import ProductList from "../components/ProductList";
import SortFilterBar from "../components/SortFilterBar";

const SellerProfilePage: React.FC = () => {
  const [activeTab, setActiveTab] = useState<
    "home" | "store" | "collection" | "market"
  >("home");

  const handleTabChange = (tab: "home" | "store" | "collection" | "market") => {
    setActiveTab(tab);
  };

  const snsLinks = [
    { name: "Twitter", url: "https://twitter.com/youraccount" },
    { name: "Instagram", url: "https://instagram.com/youraccount" },
    { name: "Facebook", url: "https://facebook.com/youraccount" },
  ];

  return (
    <div className="seller-profile">
      <AccountCard
        accountName="SALE SELLER"
        description="これは販売者のサンプルアカウントです。ここでは自己紹介や、販売するデジタルコンテンツの特徴などを記載します。"
        snsLinks={snsLinks}
      />
      <SellerNavBar activeTab={activeTab} onTabChange={handleTabChange} />
      <SortFilterBar />
      <ProductList />
    </div>
  );
};

export default SellerProfilePage;
</file>

<file path="src/index.css">
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #fff;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
  font-weight: normal;
}
button:hover {
  border-color: #646cff;
}
/* button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
} */

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}
</file>

<file path="src/main.tsx">
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import App from "./App.tsx";

createRoot(document.getElementById("root")!).render(
  <StrictMode>
    <App />
  </StrictMode>
);
</file>

<file path="src/utils/getIconUrl.ts">
// src/utils/getIconUrl.ts
/**
 * 指定したアイコン画像の URL を返します。
 * Vite の import.meta.url を利用し、ビルド後も正しいパスを解決します。
 * @param name ファイル名（拡張子込み）
 * @returns 画像の絶対 URL
 */
export function getIconUrl(name: string): string {
  return new URL(`../assets/common/icon/${name}.svg`, import.meta.url).href;
}

export function getLogoUrl(name: string): string {
  return new URL(`../assets/common/logo/${name}.svg`, import.meta.url).href;
}
</file>

<file path="src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path="tsconfig.app.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}
</file>

<file path="tsconfig.json">
{
  "files": [],
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@root/*": ["./*"]
    },
    "types": ["node"]
  },
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="tsconfig.node.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="vite.config.ts">
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@root": path.resolve(__dirname, "./"),
    },
  },
});
</file>

</files>
</file>

<file path="frontend/market-palace/src/App.css">
#root {
  width: 100%;
  /* max-width: 1280px; */
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* ヘッダーは上部に固定 */
.main-layout {
  display: flex;
  /* サイドバーの幅分だけマージン（またはpadding）を左側に追加 */
  margin-left: 80px; /* Sidebar の幅と同じ値 */
}

/* content-area は主要コンテンツ部分 */
.content-area {
  flex: 1;
  padding-top: 20px;
}
</file>

<file path="frontend/market-palace/src/App.tsx">
import React from "react";
import { Outlet } from "react-router-dom";
import Header from "./components/Header";
import Sidebar from "./components/Sidebar";
import "./App.css";

function App() {
  return (
    <div className="app-container">
      <Header />
      <div className="main-layout">
        <Sidebar />
        <div className="content-area">
          <Outlet />
        </div>
      </div>
    </div>
  );
}

export default App;
</file>

<file path="frontend/market-palace/src/assets/common/icon/bell-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/bell-slash-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-slash-fill" viewBox="0 0 16 16">
  <path d="M5.164 14H15c-1.5-1-2-5.902-2-7q0-.396-.06-.776zm6.288-10.617A5 5 0 0 0 8.995 2.1a1 1 0 1 0-1.99 0A5 5 0 0 0 3 7c0 .898-.335 4.342-1.278 6.113zM10 15a2 2 0 1 1-4 0zm-9.375.625a.53.53 0 0 0 .75.75l14.75-14.75a.53.53 0 0 0-.75-.75z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/bell-slash.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-slash" viewBox="0 0 16 16">
  <path d="M5.164 14H15c-.299-.199-.557-.553-.78-1-.9-1.8-1.22-5.12-1.22-6q0-.396-.06-.776l-.938.938c.02.708.157 2.154.457 3.58.161.767.377 1.566.663 2.258H6.164zm5.581-9.91a4 4 0 0 0-1.948-1.01L8 2.917l-.797.161A4 4 0 0 0 4 7c0 .628-.134 2.197-.459 3.742q-.075.358-.166.718l-1.653 1.653q.03-.055.059-.113C2.679 11.2 3 7.88 3 7c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0c.942.19 1.788.645 2.457 1.284zM10 15a2 2 0 1 1-4 0zm-9.375.625a.53.53 0 0 0 .75.75l14.75-14.75a.53.53 0 0 0-.75-.75z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/bell.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2M8 1.918l-.797.161A4 4 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4 4 0 0 0-3.203-3.92zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5 5 0 0 1 13 6c0 .88.32 4.2 1.22 6"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/bookmark-star-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-star-fill" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5M8.16 4.1a.178.178 0 0 0-.32 0l-.634 1.285a.18.18 0 0 1-.134.098l-1.42.206a.178.178 0 0 0-.098.303L6.58 6.993c.042.041.061.1.051.158L6.39 8.565a.178.178 0 0 0 .258.187l1.27-.668a.18.18 0 0 1 .165 0l1.27.668a.178.178 0 0 0 .257-.187L9.368 7.15a.18.18 0 0 1 .05-.158l1.028-1.001a.178.178 0 0 0-.098-.303l-1.42-.206a.18.18 0 0 1-.134-.098z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/bookmark-star.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-star" viewBox="0 0 16 16">
  <path d="M7.84 4.1a.178.178 0 0 1 .32 0l.634 1.285a.18.18 0 0 0 .134.098l1.42.206c.145.021.204.2.098.303L9.42 6.993a.18.18 0 0 0-.051.158l.242 1.414a.178.178 0 0 1-.258.187l-1.27-.668a.18.18 0 0 0-.165 0l-1.27.668a.178.178 0 0 1-.257-.187l.242-1.414a.18.18 0 0 0-.05-.158l-1.03-1.001a.178.178 0 0 1 .098-.303l1.42-.206a.18.18 0 0 0 .134-.098z"/>
  <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/cart.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart" viewBox="0 0 16 16">
  <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l1.313 7h8.17l1.313-7zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/clock-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/clock-history.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-history" viewBox="0 0 16 16">
  <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022zm2.004.45a7 7 0 0 0-.985-.299l.219-.976q.576.129 1.126.342zm1.37.71a7 7 0 0 0-.439-.27l.493-.87a8 8 0 0 1 .979.654l-.615.789a7 7 0 0 0-.418-.302zm1.834 1.79a7 7 0 0 0-.653-.796l.724-.69q.406.429.747.91zm.744 1.352a7 7 0 0 0-.214-.468l.893-.45a8 8 0 0 1 .45 1.088l-.95.313a7 7 0 0 0-.179-.483m.53 2.507a7 7 0 0 0-.1-1.025l.985-.17q.1.58.116 1.17zm-.131 1.538q.05-.254.081-.51l.993.123a8 8 0 0 1-.23 1.155l-.964-.267q.069-.247.12-.501m-.952 2.379q.276-.436.486-.908l.914.405q-.24.54-.555 1.038zm-.964 1.205q.183-.183.35-.378l.758.653a8 8 0 0 1-.401.432z"/>
  <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0z"/>
  <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/comment-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-right-text-fill" viewBox="0 0 16 16">
  <path d="M16 2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h9.586a1 1 0 0 1 .707.293l2.853 2.853a.5.5 0 0 0 .854-.353zM3.5 3h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/comment.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-right-text" viewBox="0 0 16 16">
  <path d="M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z"/>
  <path d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6m0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/download.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
  <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
  <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/gift-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gift-fill" viewBox="0 0 16 16">
  <path d="M3 2.5a2.5 2.5 0 0 1 5 0 2.5 2.5 0 0 1 5 0v.006c0 .07 0 .27-.038.494H15a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h2.038A3 3 0 0 1 3 2.506zm1.068.5H7v-.5a1.5 1.5 0 1 0-3 0c0 .085.002.274.045.43zM9 3h2.932l.023-.07c.043-.156.045-.345.045-.43a1.5 1.5 0 0 0-3 0zm6 4v7.5a1.5 1.5 0 0 1-1.5 1.5H9V7zM2.5 16A1.5 1.5 0 0 1 1 14.5V7h6v9z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/gift.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gift" viewBox="0 0 16 16">
  <path d="M3 2.5a2.5 2.5 0 0 1 5 0 2.5 2.5 0 0 1 5 0v.006c0 .07 0 .27-.038.494H15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 14.5V7a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h2.038A3 3 0 0 1 3 2.506zm1.068.5H7v-.5a1.5 1.5 0 1 0-3 0c0 .085.002.274.045.43zM9 3h2.932l.023-.07c.043-.156.045-.345.045-.43a1.5 1.5 0 0 0-3 0zM1 4v2h6V4zm8 0v2h6V4zm5 3H9v8h4.5a.5.5 0 0 0 .5-.5zm-7 8V7H2v7.5a.5.5 0 0 0 .5.5z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/home-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 48 48" width="48px" height="48px"><path d="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9	C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52	C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/home.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 48 48" width="48px" height="48px"><path d="M 23.951172 4 A 1.50015 1.50015 0 0 0 23.072266 4.3222656 L 8.859375 15.519531 C 7.0554772 16.941163 6 19.113506 6 21.410156 L 6 40.5 C 6 41.863594 7.1364058 43 8.5 43 L 18.5 43 C 19.863594 43 21 41.863594 21 40.5 L 21 30.5 C 21 30.204955 21.204955 30 21.5 30 L 26.5 30 C 26.795045 30 27 30.204955 27 30.5 L 27 40.5 C 27 41.863594 28.136406 43 29.5 43 L 39.5 43 C 40.863594 43 42 41.863594 42 40.5 L 42 21.410156 C 42 19.113506 40.944523 16.941163 39.140625 15.519531 L 24.927734 4.3222656 A 1.50015 1.50015 0 0 0 23.951172 4 z M 24 7.4101562 L 37.285156 17.876953 C 38.369258 18.731322 39 20.030807 39 21.410156 L 39 40 L 30 40 L 30 30.5 C 30 28.585045 28.414955 27 26.5 27 L 21.5 27 C 19.585045 27 18 28.585045 18 30.5 L 18 40 L 9 40 L 9 21.410156 C 9 20.030807 9.6307412 18.731322 10.714844 17.876953 L 24 7.4101562 z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/list.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/search.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/settings-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px"><path d="M20.726,14.204C20.908,13.483,21,12.745,21,12s-0.092-1.483-0.274-2.204l1.001-0.758c0.501-0.379,0.643-1.077,0.328-1.621	l-1.059-1.835c-0.315-0.544-0.99-0.77-1.568-0.525l-1.167,0.492c-1.075-1.047-2.375-1.8-3.807-2.205l-0.156-1.249	C14.221,1.471,13.688,1,13.059,1h-2.117c-0.629,0-1.163,0.471-1.24,1.095L9.545,3.344C8.113,3.749,6.813,4.501,5.738,5.549	L4.572,5.057c-0.58-0.243-1.253-0.019-1.569,0.526L1.944,7.417C1.63,7.961,1.771,8.659,2.272,9.039l1.001,0.758	C3.092,10.517,3,11.255,3,12s0.092,1.483,0.274,2.204l-1.001,0.758c-0.501,0.379-0.643,1.077-0.328,1.621l1.059,1.835	c0.315,0.545,0.988,0.77,1.568,0.525l1.166-0.492c1.076,1.047,2.376,1.8,3.808,2.205l0.156,1.25C9.779,22.529,10.312,23,10.941,23	h2.117c0.629,0,1.162-0.471,1.24-1.095l0.156-1.249c1.432-0.405,2.732-1.157,3.808-2.205l1.165,0.492	c0.579,0.243,1.253,0.019,1.569-0.526l1.059-1.834c0.314-0.544,0.173-1.242-0.328-1.622L20.726,14.204z M12,16c-2.206,0-4-1.794-4-4	s1.794-4,4-4s4,1.794,4,4S14.206,16,12,16z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/settings.svg">
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px"><path d="M 10.941406 0.99804688 C 10.31639 0.99804688 9.77815 1.4729587 9.7011719 2.09375 L 9.5351562 3.4199219 C 8.1077936 3.8320377 6.8433087 4.5736193 5.8046875 5.5761719 L 4.5722656 5.0566406 C 3.9955251 4.8130175 3.3160841 5.0419142 3.0039062 5.5820312 L 1.9453125 7.4160156 C 1.6333733 7.9557199 1.7748716 8.6597492 2.2714844 9.0371094 L 3.3339844 9.8417969 C 3.1596002 10.540468 3 11.248018 3 12 C 3 12.751982 3.1595527 13.459904 3.3339844 14.158203 L 2.2734375 14.960938 C 1.7749828 15.337877 1.632637 16.041966 1.9433594 16.582031 A 0.750075 0.750075 0 0 0 1.9453125 16.583984 L 3.0039062 18.417969 C 3.3160841 18.958086 3.9955251 19.186983 4.5722656 18.943359 L 5.8066406 18.423828 C 6.8454475 19.426294 8.1095764 20.168168 9.5371094 20.580078 L 9.7011719 21.90625 C 9.7781499 22.527041 10.31639 23.001953 10.941406 23.001953 L 13.058594 23.001953 C 13.68361 23.001953 14.22185 22.527041 14.298828 21.90625 L 14.464844 20.580078 C 15.892206 20.167962 17.156692 19.426381 18.195312 18.423828 L 19.429688 18.943359 C 20.004742 19.186271 20.686235 18.957979 20.998047 18.416016 L 22.056641 16.583984 C 22.369055 16.043458 22.226444 15.340424 21.730469 14.962891 A 0.750075 0.750075 0 0 0 21.728516 14.960938 L 20.666016 14.158203 C 20.840437 13.459834 21 12.751982 21 12 C 21 11.248018 20.840447 10.540096 20.666016 9.8417969 L 21.726562 9.0390625 C 22.225017 8.6621216 22.367363 7.9580337 22.056641 7.4179688 A 0.750075 0.750075 0 0 0 22.054688 7.4160156 L 20.996094 5.5820312 C 20.683916 5.0419142 20.004475 4.8130175 19.427734 5.0566406 L 18.193359 5.5761719 C 17.154553 4.5737057 15.890424 3.8318319 14.462891 3.4199219 L 14.298828 2.09375 C 14.22185 1.4729587 13.68361 0.99804687 13.058594 0.99804688 L 10.941406 0.99804688 z M 11.162109 2.4980469 L 12.837891 2.4980469 L 13.029297 4.0390625 A 0.750075 0.750075 0 0 0 13.613281 4.6777344 C 15.148094 5.0146665 16.501136 5.8215425 17.527344 6.9433594 A 0.750075 0.750075 0 0 0 18.373047 7.1289062 L 19.806641 6.5234375 L 20.646484 7.9765625 L 19.412109 8.9101562 A 0.750075 0.750075 0 0 0 19.150391 9.734375 C 19.376841 10.449194 19.5 11.209251 19.5 12 C 19.5 12.790749 19.377004 13.54938 19.150391 14.265625 A 0.750075 0.750075 0 0 0 19.412109 15.089844 L 20.648438 16.023438 L 19.808594 17.476562 L 18.373047 16.871094 A 0.750075 0.750075 0 0 0 17.529297 17.056641 C 16.503089 18.178458 15.148094 18.985333 13.613281 19.322266 A 0.750075 0.750075 0 0 0 13.03125 19.960938 L 12.837891 21.501953 L 11.162109 21.501953 L 10.970703 19.960938 A 0.750075 0.750075 0 0 0 10.386719 19.322266 C 8.8519063 18.985333 7.4988637 18.178458 6.4726562 17.056641 A 0.750075 0.750075 0 0 0 5.6269531 16.871094 L 4.1933594 17.476562 L 3.3535156 16.023438 L 4.5878906 15.089844 A 0.750075 0.750075 0 0 0 4.8496094 14.265625 C 4.623159 13.550806 4.5 12.790749 4.5 12 C 4.5 11.209251 4.6230509 10.448492 4.8496094 9.7324219 A 0.750075 0.750075 0 0 0 4.5878906 8.9082031 L 3.3554688 7.9765625 L 4.1933594 6.5234375 L 5.6269531 7.1289062 A 0.750075 0.750075 0 0 0 6.4707031 6.9433594 C 7.4969106 5.8215425 8.8519063 5.0146665 10.386719 4.6777344 A 0.750075 0.750075 0 0 0 10.96875 4.0390625 L 11.162109 2.4980469 z M 12 8 C 10.729167 8 9.6810741 8.5035667 9.0019531 9.2675781 C 8.3228321 10.03159 8 11.020833 8 12 C 8 12.979167 8.3228321 13.96841 9.0019531 14.732422 C 9.6810741 15.496433 10.729167 16 12 16 C 13.270833 16 14.318926 15.496433 14.998047 14.732422 C 15.677168 13.96841 16 12.979167 16 12 C 16 11.020833 15.677168 10.03159 14.998047 9.2675781 C 14.318926 8.5035667 13.270833 8 12 8 z M 12 9.5 C 12.895833 9.5 13.472741 9.8089332 13.876953 10.263672 C 14.281165 10.71841 14.5 11.354167 14.5 12 C 14.5 12.645833 14.281165 13.28159 13.876953 13.736328 C 13.472741 14.191067 12.895833 14.5 12 14.5 C 11.104167 14.5 10.527259 14.191067 10.123047 13.736328 C 9.7188349 13.28159 9.5 12.645833 9.5 12 C 9.5 11.354167 9.7188349 10.71841 10.123047 10.263672 C 10.527259 9.8089332 11.104167 9.5 12 9.5 z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/share-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-share-fill" viewBox="0 0 16 16">
  <path d="M11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.5 2.5 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/share.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
  <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.5 2.5 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5m-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/shop-fill.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44.74 39.02"><path d="M33.36,6.74l1.46,6.23c.11.48-.24,1.1-.84,1.26-.85.22-1.39-.24-1.46-.52l-1.46-6.52c-.05-.22,0-.95.89-1.12.95-.18,1.36.45,1.41.67ZM35.03,21.3c1.54,1.42,3.09,1.73,4.55,1.82,1.66.11,3.24-.53,4.23-1.71.79-.94,1.09-2.09.82-3.18-.5-2.04-2.49-9.92-3.92-15.24-.47-1.76-2.07-2.99-3.9-2.99H7.91c-1.82,0-3.43,1.23-3.9,2.99C2.59,8.29.59,16.18.09,18.23c-.26,1.09.04,2.24.82,3.18,1,1.18,2.58,1.82,4.23,1.71,1.46-.1,3.01-.4,4.55-1.82.84,1.3,2.18,2.01,3.84,2.01h0c2.5,0,3.84-1.31,4.72-2.55.82,1.21,2.05,2.53,4.09,2.53h.01c2.11,0,3.42-1.37,4.15-2.45.87,1.18,2.23,2.46,4.66,2.47h0c1.67,0,3-.71,3.84-2.01ZM12.29,6.07c.89.17.94.9.89,1.12l-1.46,6.52c-.06.28-.6.74-1.46.52-.6-.16-.96-.78-.84-1.26l1.46-6.23c.05-.22.46-.86,1.41-.67ZM19.18,6.09c.9.1,1,.83.97,1.05l-.93,6.11c-.04.28-.54.78-1.41.63-.61-.11-1.02-.71-.94-1.19l.95-5.82c.04-.22.39-.89,1.36-.78ZM26.42,6.87l.95,5.82c.08.48-.32,1.08-.94,1.19-.87.16-1.37-.35-1.41-.63l-.93-6.11c-.03-.22.07-.95.97-1.05.96-.11,1.32.56,1.36.78Z"/><path d="M39.58,24.63c-1.16-.63-2.69-.45-4.11-1.46-.24-.17-.59-.13-.78.1-.84,1.01-2.05,1.55-3.51,1.55h0c-2.01,0-3.28-.88-4.16-1.84-.27-.3-.73-.29-.99.02-.78.91-1.95,1.8-3.66,1.8h-.01c-1.67,0-2.8-.89-3.6-1.87-.26-.31-.72-.32-.98-.02-.88,1.01-2.16,1.91-4.22,1.91h0c-1.46,0-2.66-.54-3.51-1.55-.19-.23-.54-.27-.78-.1-1.42,1.01-2.94.83-4.11,1.46-.37.2-.78,1.05-.78,1.5v10.38c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-7c0-.28.22-.5.5-.5h5c.28,0,.5.22.5.5v7c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-10.38c0-.45-.41-1.3-.78-1.5Z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/shop.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44.74 39.02"><path d="M24.87,29.02c.28,0,.5.22.5.5v7c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-10.38c0-.45-.2-.87-.54-1.16l-.19-.16c-.45-.38-1.11-.37-1.56,0l-.18.15c-.34.29-.53.71-.53,1.15v9.89h-9v-6.5c0-1.92-1.58-3.5-3.5-3.5h-5c-1.92,0-3.5,1.58-3.5,3.5v6.5H7.37v-9.89c0-.44-.2-.87-.53-1.15l-.18-.15c-.45-.38-1.1-.38-1.56,0l-.19.16c-.34.29-.54.71-.54,1.16v10.38c0,1.38,1.12,2.5,2.5,2.5h10c1.38,0,2.5-1.12,2.5-2.5v-7c0-.28.22-.5.5-.5h5Z"/><path d="M31.19,23.31h0c-2.43,0-3.8-1.29-4.66-2.47-.73,1.08-2.03,2.44-4.15,2.45h-.01c-2.03,0-3.27-1.32-4.09-2.53-.88,1.24-2.23,2.54-4.72,2.55h0c-1.67,0-3-.71-3.84-2.01-1.54,1.42-3.09,1.73-4.55,1.82-1.65.11-3.24-.53-4.23-1.71-.79-.94-1.09-2.09-.82-3.18.5-2.05,2.5-9.94,3.92-15.24C4.48,1.23,6.08,0,7.91,0h28.92c1.83,0,3.43,1.23,3.9,2.99,1.43,5.32,3.42,13.2,3.92,15.24.26,1.08-.04,2.24-.82,3.18-.99,1.18-2.58,1.82-4.23,1.71-1.46-.1-3.01-.4-4.55-1.82-.84,1.3-2.18,2.01-3.84,2.01ZM26.48,17.2c.78,0,1.51.4,1.92,1.06.95,1.51,1.51,2.05,2.78,2.05h0c.8,0,1.23-.3,1.53-1.06.3-.76.96-1.3,1.76-1.43.78-.13,1.58.16,2.1.77,1.11,1.3,2.1,1.46,3.19,1.53.83.05,1.44-.3,1.74-.65.16-.19.24-.39.2-.54-.49-2.03-2.48-9.87-3.9-15.17-.12-.45-.53-.77-1-.77H7.91c-.47,0-.88.32-1,.77-1.41,5.28-3.4,13.13-3.9,15.17-.04.14.04.35.2.54.29.35.91.71,1.74.65,1.09-.07,2.08-.24,3.19-1.53.52-.61,1.31-.9,2.1-.77.8.13,1.46.67,1.76,1.43.3.76.73,1.06,1.53,1.06h0c1.28,0,1.85-.55,2.81-2.09.43-.68,1.16-1.1,1.97-1.08.8,0,1.52.42,1.93,1.11.8,1.35,1.35,2.03,2.11,2.03h0c.56,0,1.24-.23,2.11-1.88h0c.38-.72,1.11-1.19,1.92-1.22.03,0,.06,0,.09,0Z"/><path d="M10.88,6.74l-1.46,6.23c-.11.48.24,1.1.84,1.26.85.22,1.39-.24,1.46-.52l1.46-6.52c.05-.22,0-.95-.89-1.12-.95-.18-1.36.45-1.41.67Z"/><path d="M17.82,6.87l-.95,5.82c-.08.48.32,1.08.94,1.19.87.16,1.37-.35,1.41-.63l.93-6.11c.03-.22-.07-.95-.97-1.05-.96-.11-1.32.56-1.36.78Z"/><path d="M33.36,6.74l1.46,6.23c.11.48-.24,1.1-.84,1.26-.85.22-1.39-.24-1.46-.52l-1.46-6.52c-.05-.22,0-.95.89-1.12.95-.18,1.36.45,1.41.67Z"/><path d="M26.42,6.87l.95,5.82c.08.48-.32,1.08-.94,1.19-.87.16-1.37-.35-1.41-.63l-.93-6.11c-.03-.22.07-.95.97-1.05.96-.11,1.32.56,1.36.78Z"/></svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/suit-heart-fill.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-heart-fill" viewBox="0 0 16 16">
  <path d="M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/icon/suit-heart.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-heart" viewBox="0 0 16 16">
  <path d="m8 6.236-.894-1.789c-.222-.443-.607-1.08-1.152-1.595C5.418 2.345 4.776 2 4 2 2.324 2 1 3.326 1 4.92c0 1.211.554 2.066 1.868 3.37.337.334.721.695 1.146 1.093C5.122 10.423 6.5 11.717 8 13.447c1.5-1.73 2.878-3.024 3.986-4.064.425-.398.81-.76 1.146-1.093C14.446 6.986 15 6.131 15 4.92 15 3.326 13.676 2 12 2c-.777 0-1.418.345-1.954.852-.545.515-.93 1.152-1.152 1.595zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.6 7.6 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z"/>
</svg>
</file>

<file path="frontend/market-palace/src/assets/common/logo/logo1.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 234.52 57.42"><defs><style>.b{font-family:Arbotek-Ultra, Arbotek;font-size:55px;}</style></defs><text class="b" transform="translate(0 45.32)"><tspan x="0" y="0">D-Market</tspan></text></svg>
</file>

<file path="frontend/market-palace/src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="frontend/market-palace/src/components/Header.css">
/* ヘッダー全体のレイアウト */
.header {
  position: fixed; /* スクロールしても固定 */
  top: 0; /* ページ上端に密着 */
  left: 0; /* 左端に密着 */
  width: 100%; /* 横幅いっぱい */

  z-index: 60; /* 他の要素より前面に表示 */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
  background-color: #ffffff;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
}

/* 左側コンテナ：ボタン機能付きアイコン画像を横並びに配置 */
.header__left {
  display: flex;
  align-items: center;
  gap: 8px;
}

/* 左側ボタン */
.header__list-button {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 4px;
}

/* 左側アイコン画像 */
.header__list-icon {
  width: 32px;
  height: 32px;
  object-fit: cover;
}

.header__logo-button {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 4px;
}

.header__logo {
  /* width: 32px; */
  height: 32px;
  /* object-fit: cover; */
}

/* 検索機能 */
.header__search {
  display: flex;
  align-items: center;
  flex: 1 1 auto;
  /* width: 100%; */
  max-width: 100%;
  height: 100%;
  background-color: #eee;
  border-radius: 10px;
  padding: 8px 8px;
  margin-right: 16px;
  margin-left: 16px;
}

.header__search-icon {
  margin-right: 4px;
  font-size: 1.2rem;
}

.header__search-input {
  flex: 1;
  border: none;
  background: transparent;
  outline: none;
  font-size: 1rem;
  color: #000000;
}

/* プレースホルダーの透過度50% */
.header__search-input::placeholder {
  color: rgba(0, 0, 0, 0.5);
}

.header__right {
  display: flex;
  gap: 0px; /* アイテム間の間隔 */
}

/* ログインボタン */
.header__login-button {
  background: transparent;
  border: none;
  font-size: 1rem;
  cursor: pointer;
  padding: 8px 12px;
  color: #333;
}

/* ユーザーアイコン */
.header__user-icon {
  width: 40px;
  height: 40px;
  overflow: hidden;
  border-radius: 50%;
  margin-left: 16px;
}

.header__user-icon img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* カート機能ボタン */
.header__cart-button {
  position: relative;
  margin-left: 16px;
  margin-right: 32px;
  cursor: pointer;
  font-size: 2rem;
}

/* 数字のオーバーレイ */
.header__cart-count {
  position: absolute;
  top: -4px;
  right: -4px;
  background-color: red;
  color: #fff;
  border-radius: 50%;
  padding: 2px 6px;
  font-size: 0.75rem;
}
</file>

<file path="frontend/market-palace/src/components/Header.tsx">
// src/components/Header.tsx
import React from "react";
import "./Header.css";
import Icon800x800 from "@root/tests/assets/Icon800x800.png";
import { getIconUrl, getLogoUrl } from "@root/src/utils/getIconUrl";
// ※ユーザーアイコン・カートアイコンは、public/assets に配置した画像、または適切なパスで指定してください。
// ここでは簡易的にインラインの絵文字を利用していますが、実際のプロジェクトでは画像ファイルやアイコンライブラリを使用してください。

const Header: React.FC = () => {
  return (
    <header className="header">
      {/* 左側：ボタン機能付きアイコン画像 */}
      <div className="header__left">
        <button
          className="header__list-button"
          onClick={() => console.log("メニュークリック")}
        >
          <img
            src={getIconUrl("list")}
            alt="左ボタン1"
            className="header__list-icon"
          />
        </button>
        <button
          className="header__logo-button"
          onClick={() => console.log("ロゴクリック")}
        >
          <img
            src={getLogoUrl("logo1")}
            alt="左ボタン2"
            className="header__logo"
          />
        </button>
      </div>
      {/* 検索機能 */}
      <div className="header__search">
        <img
          src={getIconUrl("search")}
          alt="検索"
          className="header__search-icon"
        />
        <input
          type="text"
          className="header__search-input"
          placeholder="検索"
        />
      </div>
      <div className="header__right">
        {/* ログインボタン */}
        <button className="header__login-button">ログイン</button>

        {/* ユーザーアイコン */}
        <div className="header__user-icon">
          <img src={Icon800x800} alt="User Icon" />
        </div>

        {/* カート機能ボタン */}
        <div className="header__cart-button">
          <img
            src={getIconUrl("cart")}
            alt="User Icon"
            width={32}
            height={32}
          />
          <span className="header__cart-count">12</span>
        </div>
      </div>
    </header>
  );
};

export default Header;
</file>

<file path="frontend/market-palace/src/components/Sidebar.css">
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 80px; /* 固定幅 */
  display: flex;
  flex-direction: column;
  gap: 6px;
  padding: 4px;
  background-color: #ffffff;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
  padding-top: 72px;
  z-index: 50;
}

/* 以下、以前と同じスタイル */
.sidebar-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 8px;
  transition: background-color 0.3s;
}

.sidebar-item:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.sidebar-item-icon {
  width: 30px;
  height: 30px;
  /* object-fit: cover; */
}

.sidebar-item-label {
  margin-top: 4px;
  font-size: 0.8rem;
  color: #333;
}
</file>

<file path="frontend/market-palace/src/components/Sidebar.tsx">
// src/components/Sidebar.tsx
import React from "react";
import "./Sidebar.css";
import { getIconUrl } from "@root/src/utils/getIconUrl";

export interface SidebarItem {
  id: number;
  iconName: string;
  label: string;
  onClick?: () => void;
}

// interface SidebarProps {
//   items: SidebarItem[];
// }

const Sidebar: React.FC = () => {
  const items: SidebarItem[] = [
    {
      id: 1,
      iconName: "home",
      label: "ホーム",
      onClick: () => console.log("ホーム"),
    },
    {
      id: 2,
      iconName: "suit-heart",
      label: "フォロー",
      onClick: () => console.log("フォロー"),
    },
    {
      id: 3,
      iconName: "bookmark-star",
      label: "お気に入り",
      onClick: () => console.log("お気に入り"),
    },
    {
      id: 4,
      iconName: "shop",
      label: "マイショップ",
      onClick: () => console.log("マイショップ"),
    },
    {
      id: 5,
      iconName: "bell",
      label: "通知",
      onClick: () => console.log("通知"),
    },
    {
      id: 6,
      iconName: "clock-history",
      label: "履歴",
      onClick: () => console.log("履歴"),
    },

    {
      id: 7,
      iconName: "settings",
      label: "設定",
      onClick: () => console.log("設定"),
    },
  ];

  return (
    <aside className="sidebar">
      {items.map((item) => (
        <button key={item.id} className="sidebar-item" onClick={item.onClick}>
          <img
            src={getIconUrl(item.iconName)}
            alt={item.label}
            className="sidebar-item-icon"
          />
          <span className="sidebar-item-label">{item.label}</span>
        </button>
      ))}
    </aside>
  );
};

export default Sidebar;
</file>

<file path="frontend/market-palace/src/features/products/api/productAPI.ts">
// src/features/product/api/productAPI.ts
// export async function fetchProducts() {
//   const response = await fetch("http://localhost:8001/api/products/");
//   return await response.json();
// }

// frontend/market-palace/src/features/products/api/productAPI.ts
const BASE = import.meta.env.VITE_API_BASE_URL || "http://localhost:8001/api";

export async function fetchProductById(productId: string) {
  const res = await fetch(`${BASE}/products/${productId}/`);
  if (!res.ok) {
    throw new Error(`Failed to fetch product ${productId}: ${res.status}`);
  }
  return res.json();
}
</file>

<file path="frontend/market-palace/src/features/products/components/Modal.css">
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-window {
  position: relative;
  background: #fff;
  border-radius: 8px;
  padding: 16px;

  /* コンテンツ幅に応じて自動伸縮 */
  width: fit-content; /* 自動幅調整 */
  min-width: 320px; /* 狭い画面の最小幅担保 */
  max-width: 75%; /* ビューポート幅の75%を上限 */

  max-height: calc(100vh - 80px);
  overflow-y: auto;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
}

.modal-close-button {
  position: absolute;
  top: 12px;
  right: 12px;
  background: transparent;
  border: none;
  font-size: 2rem;
  line-height: 1;
  cursor: pointer;
  color: #d6d6d6;
}

.modal-close-button:hover {
  color: #727272;
}
</file>

<file path="frontend/market-palace/src/features/products/components/Modal.tsx">
import React, { ReactNode, useEffect, useRef } from "react";
import "./Modal.css";

type ModalProps = {
  children: ReactNode;
  onClose: () => void;
};

const Modal: React.FC<ModalProps> = ({ children, onClose }) => {
  const overlayRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const handleClickOutside = (e: MouseEvent) => {
      if (
        overlayRef.current &&
        e.target instanceof Node &&
        !overlayRef.current.contains(e.target)
      ) {
        onClose();
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [onClose]);

  return (
    <div className="modal-backdrop">
      <div className="modal-window" ref={overlayRef}>
        <button className="modal-close-button" onClick={onClose}>
          &times;
        </button>
        {children}
      </div>
    </div>
  );
};

export default Modal;
</file>

<file path="frontend/market-palace/src/features/products/components/ProductCard.tsx">
import React from "react";

type Product = {
  id: number;
  title: string;
  description: string;
  price: string;
};

export default function ProductCard({ product }: { product: Product }) {
  return (
    <div className="border p-4 rounded">
      <h2>{product.title}</h2>
      <p>{product.description}</p>
      <strong>¥{product.price}</strong>
      <button className="mt-2 bg-blue-500 text-white px-3 py-1 rounded">
        購入
      </button>
    </div>
  );
}
</file>

<file path="frontend/market-palace/src/features/products/components/ProductDetailCard.css">
/* ProductDetailCard.css */
.product-detail {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 32px;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}
.action2-icon {
  width: 25px;
  height: 25px;
  margin-right: 4px;
  margin-left: 4px;
  vertical-align: middle;
}
.product-media {
  display: flex;
  flex-direction: column;
  gap: 16px;
  /* width: 600px; */
}

.product-info {
  display: flex;
  flex-direction: column;
  gap: 16px;
  /* width: 500px; */
}
.thumbnail-viewer {
  width: 100%;
  aspect-ratio: 1 / 1.2;
  background-color: #000;
  overflow: hidden;
  border-radius: 8px;
}

.thumbnail-viewer img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  object-position: center;
}

.gallery-thumbnails {
  display: flex;
  gap: 8px;
}

.gallery-thumbnails img {
  width: 80px;
  height: 80px;
  border-radius: 4px;
  object-fit: cover;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.gallery-thumbnails img:hover {
  transform: scale(1.1);
}

.media-extra-info {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* フォーマットセクション */
.format-section {
  background: #f9f9f9;
  padding: 12px;
  border-radius: 8px;
}

.format-buttons {
  display: flex;
  gap: 8px;
  margin-bottom: 12px;
}

.format-btn {
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background: white;
  cursor: pointer;
  font-size: 0.875rem;
}

.format-btn.active {
  background: #007bff;
  color: white;
  border-color: #007bff;
}

.format-detail ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.format-detail li {
  margin-bottom: 4px;
}

.product-title {
  font-size: 2rem;
  margin-top: 30px;
  margin-bottom: 30px;
}

/* 販売所セクション */
/* .sellers-section h2 {
  margin-bottom: 8px;
} */

.sellers-list {
  display: flex;
  gap: 12px;
  align-items: center;
  flex-wrap: nowrap; /* 折り返さない */
  overflow-x: auto; /* 必要に応じて横スクロール */
}

.seller-card {
  flex: 0 0 auto;
  width: 100px;
  aspect-ratio: 3 / 1;
  position: relative;
  background-color: #f0f0f0;
  border-radius: 6px;
  overflow: hidden;
  text-decoration: none;
}

.seller-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.seller-name {
  position: absolute;
  bottom: 4px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.6);
  color: white;
  font-size: 0.75rem;
  padding: 2px 4px;
  border-radius: 4px;
  display: inline-block;
  max-width: 100px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.creator-list {
  display: flex;
  gap: 4px;
  align-items: center;
}

.tag-list {
  display: flex;
  gap: 4px;
  align-items: center;
}

.badge {
  background: #f0f0f0;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.875rem;
}

.description-section {
  position: relative;
  background: #f9f9f9;
  padding: 12px;
  border-radius: 8px;
}

.product-description {
  line-height: 1.6;
  transition: max-height 0.3s ease;
}

.product-description.collapsed {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.product-description.expanded {
  max-height: none;
}

.toggle-btn {
  background: none;
  border: none;
  color: #007bff;
  cursor: pointer;
  padding: 4px 0;
  font-size: 0.875rem;
}

.toggle-btn:hover {
  text-decoration: underline;
}
.license-section {
  margin-top: 1rem;
  padding: 0.5rem;
  background-color: #f9f9f9;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.license-section h2 {
  font-size: 1.25rem;
  margin-bottom: 1rem;
  color: #333;
}

.license-select {
  width: 100%;
  padding: 0.6rem 1rem;
  font-size: 1rem;
  border: 1px solid #ccc;
  border-radius: 8px;
  background-color: #fff;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20width%3D%2210%22%20height%3D%226%22%20viewBox%3D%220%200%2010%206%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M1%200L5%204L9%200%22%20stroke%3D%22%23333%22%20stroke-width%3D%221.5%22/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 10px 6px;
  cursor: pointer;
  transition: border-color 0.2s;
}

.license-select:focus {
  border-color: #007bff;
  outline: none;
}

.license-stock {
  margin-top: 1rem;
  font-size: 1.05rem;
  /* color: #555; */
}

.license-actions {
  margin-top: 1rem;
  display: flex;
  gap: 1rem;
}

.license-actions .btn {
  flex: 1;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.license-actions .btn.purchase {
  background-color: #28a745;
  color: #fff;
}

.license-actions .btn.purchase:hover {
  background-color: #218838;
}

.license-actions .btn.cart {
  background-color: #17a2b8;
  color: #fff;
}

.license-actions .btn.cart:hover {
  background-color: #138496;
}

.action2-buttons {
  display: flex;
  gap: 12px;
}

.action2-btn {
  padding: 8px 16px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  background-color: transparent;
}

.action2-btn:hover {
  opacity: 0.9;
}

.report {
  background: #f8f8f8;
  /* color: #ffffff; */
}

.help-buttons {
  text-align: right;
}

.creator-badge {
  display: inline-flex;
  align-items: center;
  background: transparent;
  padding: 2px 2px;
  border-radius: 1px;
  font-size: 0.875rem;
  gap: 4px;
}

.creator-icon {
  width: 40px;
  height: 40px;
  object-fit: cover;
  border-radius: 50%;
}
.creator-text {
  display: inline-block;
  max-width: 80px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.creator-item-vertical .creator-text {
  display: inline-block;
  max-width: 200px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.more-btn {
  background: #f0f0f0;
  border: none;
  font-size: 1.5rem;
  padding: 4px;
  border-radius: 50%;
  width: 40px;
  height: 40px;
}

.vertical-list {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.creators-vertical .creator-item-vertical {
  display: flex;
  gap: 8px;
  align-items: center;
}

/* 内部リストは既存のメディアクエリで列数制御 */
.sellers-modal-list {
  display: grid;
  grid-template-columns: 1fr;
  gap: 24px;
  padding: 8px 0;
}
@media (min-width: 640px) {
  .sellers-modal-list {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (min-width: 768px) {
  .sellers-modal-list {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (min-width: 1024px) {
  .sellers-modal-list {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* 各アイテムは幅100%で Grid のセルいっぱいに */
.seller-item-vertical {
  width: 100%;
  max-width: 230px;
  margin: 0 auto; /* 横方向中央寄せ */
  justify-self: center; /* Gridセル内で中央寄せ */
  /* align-self: center; */ /* 必要なら縦方向も中央寄せ */
}

/* リンク全体を縦レイアウトに */
.seller-link-vertical {
  display: block;
  text-decoration: none;
  color: inherit;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  overflow: hidden;
  background: #fff;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}

/* バナー画像：親幅いっぱい */
.seller-banner-full {
  display: block;
  width: 100%;

  height: auto;
  object-fit: cover;
}

/* 販売所名 */
.seller-name-vertical {
  margin: 8px;
  font-size: 0.95rem;
  text-align: center;
  white-space: normal;
  word-break: break-all;

  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;

  line-clamp: 2;

  overflow: hidden;
}

/* バージョン管理テーブル用スタイル */
.version-section {
  margin: 24px 0;
  padding: 16px;
  background-color: #fafafa;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.version-section h2 {
  margin-bottom: 12px;
  font-size: 1.25rem;
  color: #333;
}

/* テーブルをラップするコンテナでスクロール制御（固定高さ：6行分） */
.version-table-container {
  display: block;
  height: calc(6 * 48px); /* 6行分の固定高さ */
  overflow-y: auto;
  overflow-x: hidden;
  width: 100%;
}

.version-table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed; /* 列幅を均等に固定 */
}

/* ヘッダー固定 */
.version-table thead th {
  position: sticky;
  top: 0;
  background-color: #f0f0f0;
  font-weight: 600;
  color: #555;
  padding: 12px 8px;
  text-align: left;
  border-bottom: 1px solid #e0e0e0;
  z-index: 1;
}

.version-table th,
.version-table td {
  padding: 12px 8px;
  text-align: left;
  border-bottom: 1px solid #e0e0e0;
  width: 25%; /* 列数が4つなら25%ずつ */
  box-sizing: border-box;
  white-space: nowrap;
}

/* 行のストライプ */
.version-table tbody tr:nth-child(even) {
  background-color: #ffffff;
}

.version-table tbody tr:nth-child(odd) {
  background-color: #fcfcfc;
}

/* 公開ステータス列の色分け */
.status-public {
  color: #2e7d32; /* 緑 */
  font-weight: bold;
}

.status-private {
  color: #c62828; /* 赤 */
  font-weight: bold;
}

/* 中央配置 */
.detail-info {
  width: 100%;
  max-width: 300px;
  margin: 0 auto;
  padding: 16px;
  background-color: #fafafa;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* 縦並びの情報テーブル */
.info-table {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-top: 20px;
  background-color: rgb(241, 241, 241);
  border-radius: 8px;
}

.info-row {
  display: flex;
  justify-content: space-between;
  padding: 8px 12px;
  border-radius: 4px;
  font-size: 14px;
}

.info-row .label {
  font-weight: bold;
  color: #333;
}

.info-row .value {
  color: #555;
}
</file>

<file path="frontend/market-palace/src/features/products/components/ProductDetailCard.tsx">
/* ProductDetailCard.tsx */
import React, { useState } from "react";
import Modal from "./Modal";
import "./ProductDetailCard.css";
import { getIconUrl } from "@root/src/utils/getIconUrl";
import Icon800x800 from "@root/tests/assets/Icon800x800.png";
import Icon800x1200 from "@root/tests/assets/Icon800x1200.png";
import PC3840x2400 from "@root/tests/assets/pc3840x2400.jpeg";

import Banner600x200 from "@root/tests/assets/Icon600x200.jpg";

type FormatInfo = {
  format: string;
  info: Record<string, any>;
};

type LicenseEntry = {
  license: { id: number; name: string };
  price: number;
};

type Product = {
  id: string;
  title: string;
  description: string;
  thumbnail_url: string;
  images: string[];
  creators: { id: number; username: string }[];
  tags: { id: number; name: string }[];
  rating: string;
  allow_ai_use: boolean;
  is_ai_generated: boolean;
  formats: FormatInfo[];
  licenses: LicenseEntry[];
  release_date: string;
  updated_at: string;
  view_count: number;
};

interface Props {
  product: Product;
}

// ダミーデータ
const dummyProduct = {
  title:
    "サンプル商品タイトルサンプル商品タイトルサンプル商品タイトルサンプル商品タイトル",
  sellers: [
    {
      id: 1,
      name: "Shop A 長い名前テスト用1234567890",
      url: "#",
      image: Banner600x200,
    },
    { id: 2, name: "Shop B", url: "#", image: Banner600x200 },
    {
      id: 3,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 4,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 5,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 6,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 7,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 4,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 5,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 6,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 7,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 8,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 9,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 10,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
    {
      id: 11,
      name: "非常に長い販売所名をここに入れて切り捨てをテストします非常に長い販売所名をここに入れて切り捨てをテストします",
      url: "#",
      image: Banner600x200,
    },
  ],
  creators: [
    { id: 1, username: "creator_one_long_name_test_123456" },
    { id: 2, username: "creator_two" },
    { id: 3, username: "creator_two" },
    { id: 4, username: "creator_two" },
    { id: 5, username: "creator_two" },
    { id: 6, username: "creator_two" },
    { id: 7, username: "creator_two" },
    { id: 8, username: "creator_two" },
    { id: 9, username: "creator_two" },
    { id: 10, username: "creator_two" },
    { id: 11, username: "creator_two" },
  ],
  description: `これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。これは商品の説明文です。商品の魅力や特徴を簡潔に紹介します。
さらに詳細な情報を含めることで、ユーザーに商品の価値を伝えます。
長い説明文が続く場合は、折りたたみ機能を実装して見やすさを保ちます。
これにより、UIがすっきりし、必要に応じて全文を確認できます。`, // 4行以上の例
  tags: ["UI", "React", "TypeScript"],
  rating: "全年齢",
  allowAI: true,
  isAIGenerated: false,
  formats: [
    {
      format: "PNG",
      info: {
        幅: "800px",
        高さ: "800px",
        容量: "200KB",
        アスペクト比: "1:1",
      },
    },
    {
      format: "JPEG",
      info: {
        幅: "3840px",
        高さ: "2400px",
        容量: "2MB",
        アスペクト比: "16:10",
      },
    },
  ],
  licenses: [
    { id: 1, name: "個人", price: 1000 },
    { id: 2, name: "商用", price: 5000 },
  ],
  releaseDate: "2025-01-01",
  updatedAt: "2025-03-15",
  likes: 120,
  favorites: 45,
  comments: 8,
  versions: [
    {
      name: "v1.0",
      releaseDate: "2025-01-01",
      updatedAt: "2025-01-10",
      status: "公開",
    },
    {
      name: "v1.1",
      releaseDate: "2025-02-15",
      updatedAt: "2025-02-20",
      status: "非公開",
    },
    {
      name: "v2.0",
      releaseDate: "2025-03-01",
      updatedAt: "2025-03-15",
      status: "公開",
    },
    {
      name: "v1.0",
      releaseDate: "2025-01-01",
      updatedAt: "2025-01-10",
      status: "公開",
    },
    {
      name: "v1.1",
      releaseDate: "2025-02-15",
      updatedAt: "2025-02-20",
      status: "非公開",
    },
    {
      name: "v2.0",
      releaseDate: "2025-03-01",
      updatedAt: "2025-03-15",
      status: "公開",
    },
    {
      name: "v1.0",
      releaseDate: "2025-01-01",
      updatedAt: "2025-01-10",
      status: "公開",
    },
    {
      name: "v1.1",
      releaseDate: "2025-02-15",
      updatedAt: "2025-02-20",
      status: "非公開",
    },
    {
      name: "v2.0",
      releaseDate: "2025-03-01",
      updatedAt: "2025-03-15",
      status: "公開",
    },
  ],
};

const ProductDetailCard: React.FC = () => {
  const product = dummyProduct;
  const [isExpanded, setIsExpanded] = useState(false);
  const [selectedFormat, setSelectedFormat] = useState(0);
  const galleryImages = [Icon800x1200, PC3840x2400];
  const toggleDescription = () => setIsExpanded((prev) => !prev);
  const [showSellersModal, setShowSellersModal] = useState(false);
  const [showCreatorsModal, setShowCreatorsModal] = useState(false);
  const [selectedLicenseId, setSelectedLicenseId] = useState(
    product.licenses[0]?.id || null
  );
  const [stockByLicense, setStockByLicense] = useState<{
    [key: number]: number;
  }>({
    1: 5,
    2: 2,
  });
  return (
    <div className="product-detail">
      {/* メディアセクション */}
      <div className="product-media">
        <div className="thumbnail-viewer">
          <img src={PC3840x2400} alt="Thumbnail" />
        </div>
        <div className="gallery-thumbnails">
          {galleryImages.map((src, idx) => (
            <img key={idx} src={src} alt={`Gallery ${idx}`} />
          ))}
        </div>

        {/* ここに説明・フォーマット・タグを移動 */}
        <div className="media-extra-info">
          <section className="description-section">
            <p
              className={`product-description ${
                isExpanded ? "expanded" : "collapsed"
              }`}
            >
              {product.description}
            </p>
            <button className="toggle-btn" onClick={toggleDescription}>
              {isExpanded ? "一部を表示" : "すべて表示"}
            </button>
          </section>

          <section className="format-section">
            <h2>フォーマット</h2>
            <div className="format-buttons">
              {product.formats.map((f, i) => (
                <button
                  key={i}
                  className={`format-btn ${
                    selectedFormat === i ? "active" : ""
                  }`}
                  onClick={() => setSelectedFormat(i)}
                >
                  {f.format}
                </button>
              ))}
            </div>
            <div className="format-detail">
              <ul>
                {Object.entries(product.formats[selectedFormat].info).map(
                  ([key, val]) => (
                    <li key={key}>
                      <strong>{key}:</strong> {val}
                    </li>
                  )
                )}
              </ul>
            </div>
          </section>

          <div className="tag-list tags">
            <strong>タグ:</strong>
            {product.tags.map((t, i) => (
              <span key={i} className="badge">
                {t}
              </span>
            ))}
          </div>
        </div>
      </div>

      {/* 情報セクション */}
      <div className="product-info">
        <h1 className="product-title">{product.title}</h1>

        {/* 販売所セクション */}
        <section className="sellers-list">
          {/* <h2>ショップ</h2> */}
          <strong>ショップ</strong>
          {product.sellers.slice(0, 4).map((s) => (
            <a key={s.id} href={s.url} className="seller-card">
              <img src={s.image} alt={s.name} />
              {/* <span className="seller-name" title={s.name}>
                  {s.name}
                </span> */}
            </a>
          ))}
          <button
            className="more-btn"
            onClick={() => setShowSellersModal(true)}
          >
            ...
          </button>
        </section>

        {/* 作成者セクション */}
        <div className="creator-list">
          <strong>作成者</strong>
          {product.creators.slice(0, 8).map((c) => (
            <span key={c.id} className="badge creator-badge">
              <img src={Icon800x800} alt="Icon" className="creator-icon" />
              {/* <span className="creator-text" title={c.username}>
                {c.username}
              </span> */}
            </span>
          ))}
          <button
            className="more-btn"
            onClick={() => setShowCreatorsModal(true)}
          >
            ...
          </button>
        </div>

        {/* Sellers モーダル */}
        {showSellersModal && (
          <Modal onClose={() => setShowSellersModal(false)}>
            <h3>販売所一覧</h3>
            <div className="vertical-list sellers-modal-list">
              {product.sellers.map((s) => (
                <div key={s.id} className="seller-item-vertical">
                  <a href={s.url} className="seller-link-vertical">
                    <img
                      src={s.image}
                      alt={s.name}
                      className="seller-banner-full"
                    />
                    <p className="seller-name-vertical">{s.name}</p>
                  </a>
                </div>
              ))}
            </div>
          </Modal>
        )}

        {/* Creators モーダル */}
        {showCreatorsModal && (
          <Modal onClose={() => setShowCreatorsModal(false)}>
            <h3>作成者一覧</h3>
            <ul className="vertical-list creators-vertical">
              {product.creators.map((c) => (
                <li key={c.id} className="creator-item-vertical">
                  <img src={Icon800x800} alt="Icon" className="creator-icon" />
                  <span className="creator-text">{c.username}</span>
                </li>
              ))}
            </ul>
          </Modal>
        )}

        <footer className="action2-buttons">
          <button className="action2-btn">
            いいね
            <img
              src={getIconUrl("suit-heart")}
              alt="いいね"
              className="action2-icon"
            />
            {product.likes}
          </button>
          <button className="action2-btn">
            お気に入り
            <img
              src={getIconUrl("bookmark-star")}
              alt="お気に入り"
              className="action2-icon"
            />
            {product.favorites}
          </button>
          <button className="action2-btn">
            コメント
            <img
              src={getIconUrl("comment")}
              alt="コメント"
              className="action2-icon"
            />
            {product.comments}
          </button>
          <button className="action2-btn">
            <img
              src={getIconUrl("share")}
              alt="シェア"
              className="action2-icon"
            />
          </button>
          <button className="action2-btn">
            <img src={getIconUrl("bell")} alt="通知" className="action2-icon" />
          </button>
        </footer>

        <section className="license-section">
          <h2 className="license-title">ライセンス</h2>
          <select
            className="license-select"
            value={selectedLicenseId ?? ""}
            onChange={(e) => setSelectedLicenseId(Number(e.target.value))}
          >
            {product.licenses.map((l) => (
              <option key={l.id} value={l.id}>
                {l.name}: {l.price.toLocaleString()}円
              </option>
            ))}
          </select>

          {selectedLicenseId !== null && (
            <>
              <p className="license-stock">
                残り点数: {stockByLicense[selectedLicenseId] ?? "在庫情報なし"}
              </p>
              <div className="license-actions">
                <button className="btn purchase">購入</button>
                <button className="btn cart">カートに入れる</button>
              </div>
            </>
          )}
        </section>

        {/* バージョン管理テーブル */}
        <section className="version-section">
          <h2>バージョン管理</h2>
          <div className="version-table-container">
            <table className="version-table">
              <thead>
                <tr>
                  <th>バージョン名</th>
                  <th>リリース日</th>
                  <th>更新日</th>
                  <th>公開ステータス</th>
                </tr>
              </thead>
              <tbody>
                {product.versions.map((v, idx) => (
                  <tr key={idx}>
                    <td>{v.name}</td>
                    <td>{v.releaseDate}</td>
                    <td>{v.updatedAt}</td>
                    <td
                      className={
                        v.status === "公開" ? "status-public" : "status-private"
                      }
                    >
                      {v.status}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </section>

        <div className="detail-info">
          <h2>詳細</h2>
          <div className="info-table">
            <div className="info-row">
              <span className="label">レーティング</span>
              <span className="value">{product.rating}</span>
            </div>
            <div className="info-row">
              <span className="label">AI利用</span>
              <span className="value">{product.allowAI ? "許可" : "禁止"}</span>
            </div>
            <div className="info-row">
              <span className="label">AI生成</span>
              <span className="value">
                {product.isAIGenerated ? "はい" : "いいえ"}
              </span>
            </div>
          </div>
        </div>

        <footer className="help-buttons">
          <button className="action2-btn report">報告</button>
        </footer>
      </div>
    </div>
  );
};

export default ProductDetailCard;
</file>

<file path="frontend/market-palace/src/features/products/pages/ProductPage.tsx">
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import ProductDetailCard from "../components/ProductDetailCard";
import { fetchProductById } from "../api/productAPI";

type LicenseEntry = {
  license: { id: number; name: string };
  price: number;
};

type Product = {
  id: string;
  title: string;
  description: string;
  thumbnail_url: string;
  images: string[];
  creators: { id: number; username: string }[];
  tags: { id: number; name: string }[];
  rating: string;
  allow_ai_use: boolean;
  is_ai_generated: boolean;
  formats: { format: string; info: Record<string, any> }[];
  licenses: LicenseEntry[];
  release_date: string;
  updated_at: string;
  view_count: number;
};

const ProductPage: React.FC = () => {
  const { productId } = useParams<{ productId: string }>();
  const [product, setProduct] = useState<Product | null>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (!productId) return;
    fetchProductById(productId)
      .then((data) => setProduct(data))
      .catch((e) => setError(e.message));
  }, [productId]);

  if (error) return <div>エラー: {error}</div>;
  if (!product) return <div>読み込み中…</div>;

  return (
    <div className="product-page-container">
      <ProductDetailCard product={product} />
    </div>
  );
};

export default ProductPage;
</file>

<file path="frontend/market-palace/src/features/seller/components/AccountCard.css">
/* src/styles/AccountCard.css */
.account-card {
  border: 1px solid #ddd;
  padding: 16px;
  max-width: 3700px;
  margin: 20px auto;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border-radius: 8px;
}

.profile-section {
  display: flex;
  align-items: center;
  margin-bottom: 16px;
}

.profile-image {
  width: 200px;
  height: 200px;
  border-radius: 12px; /* ラウンドがかかった正方形 */
  object-fit: cover;
  margin-right: 16px;
}

.account-info {
  flex: 1;
}

.account-name {
  margin: 0;
  font-size: 24px;
  font-weight: bold;
  text-transform: uppercase;
  color: #000000;
}

.action-buttons {
  margin-top: 8px;
}

.action-buttons button {
  margin-right: 8px;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: bold;
  color: #fff;
}

.follow-button {
  background-color: #1da1f2;
}

.present-button {
  background-color: #ff5a5f;
}

.subscr-button {
  background-color: #28a745;
}

.sns-links {
  margin-top: 8px;
}

.sns-link {
  margin-right: 8px;
  color: #0077cc;
  text-decoration: none;
}

.sns-link:hover {
  text-decoration: underline;
}

.account-description {
  font-size: 16px;
  line-height: 1.5;
  margin-top: 16px;
  color: #000000;
}
</file>

<file path="frontend/market-palace/src/features/seller/components/AccountCard.tsx">
// src/components/AccountCard.tsx
import React from "react";
import "./AccountCard.css";
import profileImage from "@root/tests/assets/Icon800x800.png";

interface SNSLink {
  name: string;
  url: string;
}

interface AccountCardProps {
  accountName: string;
  description: string;
  snsLinks: SNSLink[];
}

const AccountCard: React.FC<AccountCardProps> = ({
  accountName,
  description,
  snsLinks,
}) => {
  return (
    <div className="account-card">
      <div className="profile-section">
        {/* ① ラウンドがかかった正方形のアイコン画像（ここでは丸く表示しています） */}
        <img src={profileImage} alt="Profile" className="profile-image" />
        <div className="account-info">
          {/* ② アカウント名（太字、大文字） */}
          <h1 className="account-name">{accountName}</h1>
          {/* ③～⑤ フォロー、プレゼント、サブスクボタン */}
          <div className="action-buttons">
            <button className="follow-button">フォロー</button>
            <button className="present-button">プレゼントを送る</button>
            <button className="request-button">リクエストを送る</button>
            <button className="subscr-button">サブスク</button>
          </div>
          {/* ⑥ SNSリンク */}
          <div className="sns-links">
            {snsLinks.map((link, index) => (
              <a
                key={index}
                href={link.url}
                target="_blank"
                rel="noopener noreferrer"
                className="sns-link"
              >
                {link.name}
              </a>
            ))}
          </div>
        </div>
      </div>
      {/* ⑦ アカウント説明文 */}
      <p className="account-description">{description}</p>
    </div>
  );
};

export default AccountCard;
</file>

<file path="frontend/market-palace/src/features/seller/components/ProductCard.css">
.product-card {
  background-color: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.product-image {
  width: 100%;
  display: block;
}

.product-title {
  font-size: 1rem;
  margin: 8px;
  color: #000;
}

.product-price {
  font-size: 0.9rem;
  margin: 0 8px 8px;
  color: #888;
}
.product-card img {
  width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
}
</file>

<file path="frontend/market-palace/src/features/seller/components/ProductCard.tsx">
// src/features/seller/components/ProductCard.tsx
import React from "react";
import { Card, CardMedia, CardContent, Typography } from "@mui/material";

interface Product {
  id: number;
  title: string;
  imageUrl: string;
  price: number;
}

interface ProductCardProps {
  product: Product;
}

const ProductCard: React.FC<ProductCardProps> = ({ product }) => {
  return (
    <Card sx={{ width: "100%", boxShadow: 3 }}>
      <CardMedia
        component="img"
        image={product.imageUrl}
        alt={product.title}
        loading="lazy"
        sx={{ width: "100%", height: "auto", display: "block" }}
      />
      <CardContent>
        <Typography
          variant="subtitle1"
          gutterBottom
          sx={{
            overflow: "hidden",
            textOverflow: "ellipsis",
            display: "-webkit-box",
            WebkitLineClamp: 2, // 表示する行数を指定
            WebkitBoxOrient: "vertical",
          }}
        >
          {product.title}
        </Typography>
        <Typography variant="body2" color="text.secondary">
          ¥{product.price.toLocaleString()}
        </Typography>
      </CardContent>
    </Card>
  );
};

export default ProductCard;
</file>

<file path="frontend/market-palace/src/features/seller/components/ProductList.css">
/* .product-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 16px;
  padding: 16px;
} */
.product-list-container {
  width: 100%;
  box-sizing: border-box;
  padding: 16px;
}
</file>

<file path="frontend/market-palace/src/features/seller/components/ProductList.tsx">
// src/features/seller/components/ProductList.tsx
import React from "react";
import Masonry, { ResponsiveMasonry } from "react-responsive-masonry";
import ProductCard from "./ProductCard";
import Icon800x800 from "@root/tests/assets/Icon800x800.png";
import Icon800x1200 from "@root/tests/assets/Icon800x1200.png";
import PC3840x2400 from "@root/tests/assets/pc3840x2400.jpeg";
import "./ProductList.css";

interface Product {
  id: number;
  title: string;
  imageUrl: string;
  price: number;
}

const sampleProducts: Product[] = [
  {
    id: 1,
    title:
      "商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1商品1",
    imageUrl: Icon800x1200,
    price: 1200,
  },
  { id: 2, title: "商品2", imageUrl: PC3840x2400, price: 1500 },
  { id: 3, title: "商品3", imageUrl: Icon800x800, price: 1800 },
  { id: 4, title: "商品4", imageUrl: PC3840x2400, price: 2200 },
  { id: 5, title: "商品5", imageUrl: Icon800x1200, price: 1200 },
  { id: 6, title: "商品6", imageUrl: PC3840x2400, price: 1500 },
  { id: 7, title: "商品7", imageUrl: Icon800x800, price: 1800 },
  { id: 8, title: "商品8", imageUrl: Icon800x1200, price: 2200 },
  { id: 9, title: "商品9", imageUrl: Icon800x1200, price: 2200 },
  { id: 10, title: "商品10", imageUrl: PC3840x2400, price: 1200 },
  { id: 11, title: "商品11", imageUrl: Icon800x1200, price: 1500 },
  { id: 12, title: "商品12", imageUrl: Icon800x800, price: 1800 },
  { id: 13, title: "商品13", imageUrl: Icon800x1200, price: 2200 },
  { id: 14, title: "商品4", imageUrl: PC3840x2400, price: 2200 },
  { id: 15, title: "商品5", imageUrl: Icon800x800, price: 1200 },
  { id: 16, title: "商品6", imageUrl: Icon800x1200, price: 1500 },
  { id: 17, title: "商品7", imageUrl: Icon800x1200, price: 1800 },
  { id: 18, title: "商品8", imageUrl: PC3840x2400, price: 2200 },
  { id: 19, title: "商品9", imageUrl: Icon800x1200, price: 2200 },
  { id: 20, title: "商品10", imageUrl: PC3840x2400, price: 1200 },
  { id: 21, title: "商品11", imageUrl: Icon800x1200, price: 1500 },
  { id: 22, title: "商品12", imageUrl: PC3840x2400, price: 1800 },
  { id: 23, title: "商品13", imageUrl: Icon800x1200, price: 2200 },
  // さらに多くの商品データ...
];

const ProductList: React.FC = () => {
  return (
    <div className="product-list-container">
      <ResponsiveMasonry
        columnsCountBreakPoints={{
          350: 2,
          768: 3,
          1024: 4,
          1280: 5,
          1580: 6,
          1780: 7,
          2080: 8,
        }}
      >
        <Masonry gutter="16px" sequential={false}>
          {sampleProducts.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </Masonry>
      </ResponsiveMasonry>
    </div>
  );
};

export default ProductList;
</file>

<file path="frontend/market-palace/src/features/seller/components/SellerNavBar.css">
.seller-nav {
  display: flex;
  justify-content: center;
  gap: 6px;
  margin: 4px 0;
  background-color: transparent;
  padding: 8px;
  /* border-radius: 4px; */
  font-size: 1.2rem;
}

.nav-button {
  background: transparent;
  border: none;
  padding: 8px 16px;
  cursor: pointer;
  font-weight: normal;
  position: relative;
  color: rgb(175, 175, 175);

  transition: color 0.3s;
}

.nav-button::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  height: 2px;
  width: 100%;
  background-color: transparent;
  /* transition: background-color 0.3s; */
}
.nav-button.active {
  font-weight: bold;
  color: rgba(0, 0, 0, 1); /* アクティブ時の文字色を黒に設定 */
}
.nav-button.active::after {
  background-color: rgba(0, 0, 0, 1); /* アクティブなアンダーラインの色 */
}

.nav-button:hover::after {
  background-color: rgba(
    0,
    0,
    0,
    0.2
  ); /* ホバー時のアンダーライン（50%透過） */
}
</file>

<file path="frontend/market-palace/src/features/seller/components/SellerNavBar.tsx">
import React from "react";
import "./SellerNavBar.css";

interface SellerNavBarProps {
  activeTab: "home" | "store" | "collection" | "market";
  onTabChange: (tab: "home" | "store" | "collection" | "market") => void;
}

const SellerNavBar: React.FC<SellerNavBarProps> = ({
  activeTab,
  onTabChange,
}) => {
  return (
    <nav className="seller-nav">
      {["ホーム", "一覧", "コレクション", "マーケット"].map((tab) => (
        <button
          key={tab}
          onClick={() =>
            onTabChange(tab as "home" | "store" | "collection" | "market")
          }
          className={`nav-button ${activeTab === tab ? "active" : ""}`}
        >
          {tab.toUpperCase()}
        </button>
      ))}
    </nav>
  );
};

export default SellerNavBar;
</file>

<file path="frontend/market-palace/src/features/seller/components/SortFilterBar.css">
.sort-filter-bar {
  display: flex;
  gap: 12px;
  padding: 4px;
  justify-content: flex-start; /* 左寄せに変更 */
  position: relative;
  margin: 0 16px;
}

.sort-filter-bar button {
  color: rgb(255, 255, 255);
  padding: 4px 16px;
  background-color: #000000;
  cursor: pointer;
  border-radius: 24px;
  font-weight: bold;
  border: none;
  /* font-size: 0.9rem; */
}

.dropdown {
  position: absolute;
  top: 60px;
  color: rgba(0, 0, 0, 1);
  background-color: white;
  border: none;
  z-index: 1000;
  border-radius: 6px;
  padding: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.dropdown > div {
  padding: 6px 12px;
  cursor: pointer;
}

.dropdown > div:hover {
  background-color: #f0f0f0;
}

.overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.3);
  z-index: 500;
}
</file>

<file path="frontend/market-palace/src/features/seller/components/SortFilterBar.tsx">
import React, { useState, useRef } from "react";
import "./SortFilterBar.css";

const sortOptions = ["人気順", "新しい順", "古い順", "安い順", "高い順"];
const filterOptions = [
  "すべて",
  "画像",
  "3Dモデル",
  "フォント",
  "PC壁紙",
  "スマホ壁紙",
  "テンプレート",
];

const SortFilterBar: React.FC = () => {
  const [sortValue, setSortValue] = useState("新しい順");
  const [filterValue, setFilterValue] = useState("すべて");
  const [openType, setOpenType] = useState<"sort" | "filter" | null>(null);
  const [dropdownStyle, setDropdownStyle] = useState<React.CSSProperties>({});

  const sortButtonRef = useRef<HTMLButtonElement>(null);
  const filterButtonRef = useRef<HTMLButtonElement>(null);

  const handleSelect = (type: "sort" | "filter", value: string) => {
    type === "sort" ? setSortValue(value) : setFilterValue(value);
    setOpenType(null);
  };

  const toggleDropdown = (type: "sort" | "filter") => {
    if (openType === type) {
      setOpenType(null);
    } else {
      const buttonRef = type === "sort" ? sortButtonRef : filterButtonRef;
      if (buttonRef.current) {
        const rect = buttonRef.current.getBoundingClientRect();
        const offsetParentRect =
          buttonRef.current.offsetParent?.getBoundingClientRect();
        setDropdownStyle({
          position: "absolute",
          top: rect.bottom + 5 - (offsetParentRect?.top || 0),
          left: rect.left - (offsetParentRect?.left || 0),
        });
      }
      setOpenType(type);
    }
  };

  return (
    <>
      {openType && (
        <div className="overlay" onClick={() => setOpenType(null)} />
      )}
      <div className="sort-filter-bar">
        <button ref={sortButtonRef} onClick={() => toggleDropdown("sort")}>
          {sortValue}
        </button>
        <button ref={filterButtonRef} onClick={() => toggleDropdown("filter")}>
          {filterValue}
        </button>

        {openType === "sort" && (
          <div className="dropdown" style={dropdownStyle}>
            {sortOptions.map((option) => (
              <div key={option} onClick={() => handleSelect("sort", option)}>
                {option}
              </div>
            ))}
          </div>
        )}

        {openType === "filter" && (
          <div className="dropdown" style={dropdownStyle}>
            {filterOptions.map((option) => (
              <div key={option} onClick={() => handleSelect("filter", option)}>
                {option}
              </div>
            ))}
          </div>
        )}
      </div>
    </>
  );
};

export default SortFilterBar;
</file>

<file path="frontend/market-palace/src/features/seller/pages/SellerProfilePage.css">
.seller-profile {
  display: block;
  width: 100%;
  box-sizing: border-box;
}
</file>

<file path="frontend/market-palace/src/features/seller/pages/SellerProfilePage.tsx">
import React, { useState } from "react";
import AccountCard from "../components/AccountCard";
import SellerNavBar from "../components/SellerNavBar";
import ProductList from "../components/ProductList";
import SortFilterBar from "../components/SortFilterBar";

const SellerProfilePage: React.FC = () => {
  const [activeTab, setActiveTab] = useState<
    "home" | "store" | "collection" | "market"
  >("home");

  const handleTabChange = (tab: "home" | "store" | "collection" | "market") => {
    setActiveTab(tab);
  };

  const snsLinks = [
    { name: "Twitter", url: "https://twitter.com/youraccount" },
    { name: "Instagram", url: "https://instagram.com/youraccount" },
    { name: "Facebook", url: "https://facebook.com/youraccount" },
  ];

  return (
    <div className="seller-profile">
      <AccountCard
        accountName="SALE SELLER"
        description="これは販売者のサンプルアカウントです。ここでは自己紹介や、販売するデジタルコンテンツの特徴などを記載します。"
        snsLinks={snsLinks}
      />
      <SellerNavBar activeTab={activeTab} onTabChange={handleTabChange} />
      <SortFilterBar />
      <ProductList />
    </div>
  );
};

export default SellerProfilePage;
</file>

<file path="frontend/market-palace/src/index.css">
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #fff;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
  font-weight: normal;
}
button:hover {
  border-color: #646cff;
}
/* button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
} */

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}
</file>

<file path="frontend/market-palace/src/main.tsx">
import React from "react";
import ReactDOM from "react-dom/client";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import App from "./App";
import ProductPage from "./features/products/pages/ProductPage";
import SellerProfilePage from "./features/seller/pages/SellerProfilePage";

ReactDOM.createRoot(document.getElementById("root")!).render(
  <BrowserRouter>
    <Routes>
      <Route path="/" element={<App />}>
        <Route path="products/:productId" element={<ProductPage />} />
        <Route path="shop" element={<SellerProfilePage />} />
      </Route>
    </Routes>
  </BrowserRouter>
);
</file>

<file path="frontend/market-palace/src/utils/getIconUrl.ts">
// src/utils/getIconUrl.ts
/**
 * 指定したアイコン画像の URL を返します。
 * Vite の import.meta.url を利用し、ビルド後も正しいパスを解決します。
 * @param name ファイル名（拡張子込み）
 * @returns 画像の絶対 URL
 */
export function getIconUrl(name: string): string {
  return new URL(`../assets/common/icon/${name}.svg`, import.meta.url).href;
}

export function getLogoUrl(name: string): string {
  return new URL(`../assets/common/logo/${name}.svg`, import.meta.url).href;
}
</file>

<file path="frontend/market-palace/src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path="frontend/market-palace/tsconfig.app.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}
</file>

<file path="frontend/market-palace/tsconfig.json">
{
  "files": [],
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@root/*": ["./*"]
    },
    "types": ["node"]
  },
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="frontend/market-palace/tsconfig.node.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="frontend/market-palace/vite.config.ts">
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@root": path.resolve(__dirname, "./"),
    },
  },
  server: {
    proxy: {
      "/api": {
        target: "http://localhost:8001", // バックエンドのURL
        changeOrigin: true,
        rewrite: (path) => path.replace(/^\/api/, ""),
      },
    },
  },
});
</file>

</files>
